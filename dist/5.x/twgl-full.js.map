{"version":3,"file":"twgl-full.js","mappings":"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AAE,EACX,CAAC,EAAI,CAAC,EAAI,CAAC,EACb,GAAG,EAAI,CAAC,EAAG,EAAE,EACX,CAAC,EAAI,CAAC,EAAG,EAAE;EAEb;EACA,GAAG,EAAI,CAAC,EAAI,CAAC,EACb,GAAG,EAAG,EAAE,EAAI,CAAC,EACb,GAAG,EAAG,EAAE,EAAG,EAAE,EACb,GAAG,EAAI,CAAC,EAAI,CAAC,EACb,GAAG,EAAG,EAAE,EAAG,EAAE,EACb,GAAG,EAAI,CAAC,EAAG,EAAE;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,GAAG,EAAG,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,GAAG,EAAG,EAAE,EAAG,EAAE,EACb,GAAG,EAAG,EAAE,EAAI,CAAC;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAG,GAAG,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAG,GAAG,EAAI,CAAC,EACb,EAAE,EAAG,GAAG,EAAG,EAAE;EAEb;EACA,CAAC,EAAI,GAAG,EAAI,CAAC,EACb,CAAC,EAAI,GAAG,EAAG,EAAE,EACb,EAAE,EAAG,GAAG,EAAG,EAAE,EACb,CAAC,EAAI,GAAG,EAAI,CAAC,EACb,EAAE,EAAG,GAAG,EAAG,EAAE,EACb,EAAE,EAAG,GAAG,EAAI,CAAC;EAEb;EACA,CAAC,EAAI,CAAC,EAAI,CAAC,EACX,CAAC,EAAI,CAAC,EAAG,EAAE,EACX,CAAC,EAAE,GAAG,EAAG,EAAE,EACX,CAAC,EAAI,CAAC,EAAI,CAAC,EACX,CAAC,EAAE,GAAG,EAAG,EAAE,EACX,CAAC,EAAE,GAAG,EAAI,CAAC,CACZ;EAED,IAAMC,SAAS,GAAG;EAChB;EACA,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI;EAEV;EACA,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI;EAEV;EACA,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI;EAEV;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC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S,EAAE;IAAA,IAAAkC,qBAAA;IACb,IAAMC,eAAe,GAAGnC,SAAS,CAAChM,KAAK;IACvC51B,EAAE,CAAC8gC,eAAe,CAAC1S,cAAc,EAAE2V,eAAe,EAAEF,gBAAgB,CAACljC,MAAM,EAAEkjC,gBAAgB,CAACn/B,MAAM,IAAI,CAAC,GAAAo/B,qBAAA,GAAED,gBAAgB,CAACthC,IAAI,cAAAuhC,qBAAA,cAAAA,qBAAA,GAAID,gBAAgB,CAACjjC,KAAK,CAACsiC,UAAU,CAAC;IACtK,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASc,eAAeA,CAAChkC,EAAE,EAAEmH,WAAW,EAAE08B,gBAAgB,EAAE;EAC1D,IAAID,gBAAgB,CAAC5jC,EAAE,EAAEmH,WAAW,EAAE08B,gBAAgB,CAAC,EAAE;IACvD7jC,EAAE,CAAC8E,aAAa,CAACspB,cAAc,EAAE,CAAC,EAAEyV,gBAAgB,CAACJ,OAAO,EAAEI,gBAAgB,CAACn/B,MAAM,IAAI,CAAC,EAAEm/B,gBAAgB,CAACthC,IAAI,IAAI,CAAC,CAAC;EACzH;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS0hC,gBAAgBA,CAACJ,gBAAgB,EAAE5b,MAAM,EAAE;EAClD,IAAMmb,OAAO,GAAGS,gBAAgB,CAACT,OAAO;EACxC,KAAK,IAAM/hC,IAAI,IAAI4mB,MAAM,EAAE;IACzB,IAAM4N,MAAM,GAAGuN,OAAO,CAAC/hC,IAAI,CAAC;IAC5B,IAAIw0B,MAAM,EAAE;MACV,IAAM1xB,KAAK,GAAG8jB,MAAM,CAAC5mB,IAAI,CAAC;MAC1Bw0B,MAAM,CAAC1xB,KAAK,CAAC;IACf;EACF;AACF;AAEA,SAASy7B,cAAcA,CAACsE,IAAI,EAAEjc,MAAM,EAAE;EACpC,KAAK,IAAM5mB,IAAI,IAAI4mB,MAAM,EAAE;IACzB,IAAMkc,IAAI,GAAGD,IAAI,CAAC7iC,IAAI,CAAC;IACvB,IAAI,OAAO8iC,IAAI,KAAK,UAAU,EAAE;MAC9BA,IAAI,CAAClc,MAAM,CAAC5mB,IAAI,CAAC,CAAC;IACpB,CAAC,MAAM;MACLu+B,cAAc,CAACsE,IAAI,CAAC7iC,IAAI,CAAC,EAAE4mB,MAAM,CAAC5mB,IAAI,CAAC,CAAC;IAC1C;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","sources":["webpack://twgl/webpack/universalModuleDefinition","webpack://twgl/./src/attributes.js","webpack://twgl/./src/draw.js","webpack://twgl/./src/framebuffers.js","webpack://twgl/./src/helper.js","webpack://twgl/./src/m4.js","webpack://twgl/./src/primitives.js","webpack://twgl/./src/programs.js","webpack://twgl/./src/textures.js","webpack://twgl/./src/twgl-full.js","webpack://twgl/./src/twgl.js","webpack://twgl/./src/typedarrays.js","webpack://twgl/./src/utils.js","webpack://twgl/./src/v3.js","webpack://twgl/./src/vertex-arrays.js","webpack://twgl/webpack/bootstrap","webpack://twgl/webpack/before-startup","webpack://twgl/webpack/startup","webpack://twgl/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, () => {\nreturn ","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as typedArrays from './typedarrays.js';\nimport * as helper from './helper.js';\n\nconst STATIC_DRAW                  = 0x88e4;\nconst ARRAY_BUFFER                 = 0x8892;\nconst ELEMENT_ARRAY_BUFFER         = 0x8893;\nconst BUFFER_SIZE                  = 0x8764;\n\nconst BYTE                         = 0x1400;\nconst UNSIGNED_BYTE                = 0x1401;\nconst SHORT                        = 0x1402;\nconst UNSIGNED_SHORT               = 0x1403;\nconst INT                          = 0x1404;\nconst UNSIGNED_INT                 = 0x1405;\nconst FLOAT                        = 0x1406;\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\nconst defaults = {\n  attribPrefix: \"\",\n};\n\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n * In other words I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || STATIC_DRAW);\n}\n\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n  type = type || ARRAY_BUFFER;\n  const buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArrayType === Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nconst texcoordRE = /coord|texture/i;\nconst colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  let numComponents;\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3;  // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName, numValues) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues || getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array,\n    };\n  }\n\n  let Type = array.type ? typedArrayTypeFromGLTypeOrTypedArrayCtor(array.type) : undefined;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(array.data);\n}\n\nfunction glTypeFromGLTypeOrTypedArrayType(glTypeOrTypedArrayCtor) {\n  return typeof glTypeOrTypedArrayCtor === 'number'\n      ? glTypeOrTypedArrayCtor\n      : glTypeOrTypedArrayCtor ? typedArrays.getGLTypeForTypedArrayType(glTypeOrTypedArrayCtor) : FLOAT;\n}\n\nfunction typedArrayTypeFromGLTypeOrTypedArrayCtor(glTypeOrTypedArrayCtor) {\n  return typeof glTypeOrTypedArrayCtor === 'number'\n      ? typedArrays.getTypedArrayTypeForGLType(glTypeOrTypedArrayCtor)\n      : glTypeOrTypedArrayCtor || Float32Array;\n}\n\nfunction attribBufferFromBuffer(gl, array/*, arrayName */) {\n  return {\n    buffer: array.buffer,\n    numValues: 2 * 3 * 4,  // safely divided by 2, 3, 4\n    type: glTypeFromGLTypeOrTypedArrayType(array.type),\n    arrayType: typedArrayTypeFromGLTypeOrTypedArrayCtor(array.type),\n  };\n}\n\nfunction attribBufferFromSize(gl, array/*, arrayName*/) {\n  const numValues = array.data || array;\n  const arrayType = typedArrayTypeFromGLTypeOrTypedArrayCtor(array.type);\n  const numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(ARRAY_BUFFER, buffer);\n  gl.bufferData(ARRAY_BUFFER, numBytes, array.drawType || STATIC_DRAW);\n  return {\n    buffer,\n    numValues,\n    type: typedArrays.getGLTypeForTypedArrayType(arrayType),\n    arrayType,\n  };\n}\n\nfunction attribBufferFromArrayLike(gl, array, arrayName) {\n  const typedArray = makeTypedArray(array, arrayName);\n  return {\n    arrayType: typedArray.constructor,\n    buffer: createBufferFromTypedArray(gl, typedArray, undefined, array.drawType),\n    type: typedArrays.getGLTypeForTypedArray(typedArray),\n    numValues: 0,\n  };\n}\n\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = 0.\n *    Requires WebGL2 or the ANGLE_instanced_arrays extension.\n *    and, if you're using WebGL1 you must have called {@link module:twgl.addExtensionsToContext}\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * @typedef {(Int8ArrayConstructor|Uint8ArrayConstructor|Int16ArrayConstructor|Uint16ArrayConstructor|Int32ArrayConstructor|Uint32ArrayConstructor|Float32ArrayConstructor)} TypedArrayConstructor\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of components of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} [data] The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {number|TypedArrayConstructor} [type] type. This is used if `data` is a JavaScript array, or `buffer` is passed in, or `data` is a number.\n *   It can either be the constructor for a typedarray. (eg. `Uint8Array`) OR a WebGL type, (eg `gl.UNSIGNED_BYTE`).\n *   For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: gl.UNSIGNED_BYTE, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = 0.\n *     Requires WebGL2 or the ANGLE_instanced_arrays extension.\n *     and, if you using WebGL1 you must have called {@link module:twgl.addExtensionsToContext}\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\nfunction createAttribsFromArrays(gl, arrays) {\n  const attribs = {};\n  Object.keys(arrays).forEach(function(arrayName) {\n    if (!isIndices(arrayName)) {\n      const array = arrays[arrayName];\n      const attribName = array.attrib || array.name || array.attribName || (defaults.attribPrefix + arrayName);\n      if (array.value) {\n        if (!Array.isArray(array.value) && !typedArrays.isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n        attribs[attribName] = {\n          value: array.value,\n        };\n      } else {\n        let fn;\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          fn = attribBufferFromBuffer;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          fn = attribBufferFromSize;\n        } else {\n          fn = attribBufferFromArrayLike;\n        }\n        const {buffer, type, numValues, arrayType} = fn(gl, array, arrayName);\n        const normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n        const numComponents = getNumComponents(array, arrayName, numValues);\n        attribs[attribName] = {\n          buffer:        buffer,\n          numComponents: numComponents,\n          type:          type,\n          normalize:     normalization,\n          stride:        array.stride || 0,\n          offset:        array.offset || 0,\n          divisor:       array.divisor === undefined ? undefined : array.divisor,\n          drawType:      array.drawType,\n        };\n      }\n    }\n  });\n  gl.bindBuffer(ARRAY_BUFFER, null);\n  return attribs;\n}\n\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically update the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably inefficient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n  if (offset !== undefined) {\n    gl.bindBuffer(ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === BYTE)           return 1;  // eslint-disable-line\n  if (type === UNSIGNED_BYTE)  return 1;  // eslint-disable-line\n  if (type === SHORT)          return 2;  // eslint-disable-line\n  if (type === UNSIGNED_SHORT) return 2;  // eslint-disable-line\n  if (type === INT)            return 4;  // eslint-disable-line\n  if (type === UNSIGNED_INT)   return 4;  // eslint-disable-line\n  if (type === FLOAT)          return 4;  // eslint-disable-line\n  return 0;\n}\n\n// Tries to get the number of elements from a set of arrays.\nconst positionKeys = ['position', 'positions', 'a_position'];\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in arrays) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n  const array = arrays[key];\n  const length = getArray(array).length;\n  if (length === undefined) {\n    return 1;   // There's no arrays\n  }\n  const numComponents = getNumComponents(array, key);\n  const numElements = length / numComponents;\n  if (length % numComponents > 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in attribs) {\n      break;\n    }\n    key = defaults.attribPrefix + key;\n    if (key in attribs) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n  const attrib = attribs[key];\n  if (!attrib.buffer) {\n    return 1; // There's no buffer\n  }\n  gl.bindBuffer(ARRAY_BUFFER, attrib.buffer);\n  const numBytes = gl.getBufferParameter(ARRAY_BUFFER, BUFFER_SIZE);\n  gl.bindBuffer(ARRAY_BUFFER, null);\n\n  const bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  const totalElements = numBytes / bytesPerValue;\n  const numComponents = attrib.numComponents || attrib.size;\n  // TODO: check stride\n  const numElements = totalElements / numComponents;\n  if (numElements % 1 !== 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs appropriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         position: { buffer: WebGLBuffer, numComponents: 3, },\n *         normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also be TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or AugmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         texcoord: { numComponents: 2, buffer: gl.createBuffer(), },\n *         normal: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specified overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  const newAttribs = createAttribsFromArrays(gl, arrays);\n  const bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  const indices = arrays.indices;\n  if (indices) {\n    const newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that contains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be derived otherwise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromArray(gl, array, arrayName) {\n  const type = arrayName === \"indices\" ? ELEMENT_ARRAY_BUFFER : ARRAY_BUFFER;\n  const typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\nfunction createBuffersFromArrays(gl, arrays) {\n  const buffers = { };\n  Object.keys(arrays).forEach(function(key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  });\n\n  // Ugh!\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\nexport {\n  createAttribsFromArrays,\n  createBuffersFromArrays,\n  createBufferFromArray,\n  createBufferFromTypedArray,\n  createBufferInfoFromArrays,\n  setAttribInfoBufferFromArray,\n\n  setAttributePrefix,\n\n  setDefaults as setAttributeDefaults_,\n  getNumComponents as getNumComponents_,\n  getArray as getArray_,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as programs from './programs.js';\n\nconst TRIANGLES                      = 0x0004;\nconst UNSIGNED_SHORT                 = 0x1403;\n\n/**\n * Drawing related functions\n *\n * For backward compatibility they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? TRIANGLES : type;\n  const indices = bufferInfo.indices;\n  const elementType = bufferInfo.elementType;\n  const numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In other words `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\nfunction drawObjectList(gl, objectsToDraw) {\n  let lastUsedProgramInfo = null;\n  let lastUsedBufferInfo = null;\n\n  objectsToDraw.forEach(function(object) {\n    if (object.active === false) {\n      return;\n    }\n\n    const programInfo = object.programInfo;\n    const bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    let bindBuffers = false;\n    const type = object.type === undefined ? TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program);\n\n      // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n      bindBuffers = true;\n    }\n\n    // Setup all the needed attributes.\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    }\n\n    // Set the uniforms.\n    programs.setUniforms(programInfo, object.uniforms);\n\n    // Draw\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\nexport {\n  drawBufferInfo,\n  drawObjectList,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as textures from './textures.js';\nimport * as helper from './helper.js';\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibility they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\n\nconst FRAMEBUFFER                    = 0x8d40;\nconst RENDERBUFFER                   = 0x8d41;\nconst TEXTURE_2D                     = 0x0de1;\n\nconst UNSIGNED_BYTE                  = 0x1401;\n\n/* PixelFormat */\nconst DEPTH_COMPONENT                = 0x1902;\nconst RGBA                           = 0x1908;\nconst DEPTH_COMPONENT24              = 0x81a6;\nconst DEPTH_COMPONENT32F             = 0x8cac;\nconst DEPTH24_STENCIL8               = 0x88f0;\nconst DEPTH32F_STENCIL8              = 0x8cad;\n\n/* Framebuffer Object. */\nconst RGBA4                          = 0x8056;\nconst RGB5_A1                        = 0x8057;\nconst RGB565                         = 0x8D62;\nconst DEPTH_COMPONENT16              = 0x81A5;\nconst STENCIL_INDEX                  = 0x1901;\nconst STENCIL_INDEX8                 = 0x8D48;\nconst DEPTH_STENCIL                  = 0x84F9;\nconst COLOR_ATTACHMENT0              = 0x8CE0;\nconst DEPTH_ATTACHMENT               = 0x8D00;\nconst STENCIL_ATTACHMENT             = 0x8D20;\nconst DEPTH_STENCIL_ATTACHMENT       = 0x821A;\n\n/* TextureWrapMode */\nconst CLAMP_TO_EDGE                  = 0x812F;\n\n/* TextureMagFilter */\nconst LINEAR                         = 0x2601;\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attachmentPoint] The attachment point. Defaults\n *   to `gl.COLOR_ATTACHMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [samples] The number of samples. Default = 1\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {number} [layer] layer for `gl.framebufferTextureLayer`. Defaults to undefined.\n *   If set then `gl.framebufferTextureLayer` is called, if not then `gl.framebufferTexture2D`\n * @property {(WebGLRenderbuffer | WebGLTexture)} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachments across framebuffers.\n * @memberOf module:twgl\n * @mixes module:twgl.TextureOptions\n */\n\nconst defaultAttachments = [\n  { format: RGBA, type: UNSIGNED_BYTE, min: LINEAR, wrap: CLAMP_TO_EDGE, },\n  { format: DEPTH_STENCIL, },\n];\n\nconst attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT24] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT32F] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH24_STENCIL8] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH32F_STENCIL8] = DEPTH_STENCIL_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format, internalFormat) {\n  return attachmentsByFormat[format] || attachmentsByFormat[internalFormat];\n}\n\nconst renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n\nconst MAX_COLOR_ATTACHMENT_POINTS = 32;  // even an 3090 only supports 8 but WebGL/OpenGL ES define constants for 32\n\nfunction isColorAttachmentPoint(attachmentPoint) {\n  return attachmentPoint >= COLOR_ATTACHMENT0 && attachmentPoint < COLOR_ATTACHMENT0 + MAX_COLOR_ATTACHMENT_POINTS;\n}\n\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {Array.<(WebGLRenderbuffer | WebGLTexture)>} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @property {number} width The width of the framebuffer and its attachments\n * @property {number} height The width of the framebuffer and its attachments\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n * It also leaves the framebuffer it just created as the currently bound `FRAMEBUFFER`.\n * Note: If this is WebGL2 or if you called {@link module:twgl.addExtensionsToContext} then it will set the drawBuffers\n * to `[COLOR_ATTACHMENT0, COLOR_ATTACHMENT1, ...]` for how ever many color attachments were created.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL1 only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  const target = FRAMEBUFFER;\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  const usedColorAttachmentsPoints = [];\n  const framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height,\n  };\n\n  attachments.forEach(function(attachmentOptions, i) {\n    let attachment = attachmentOptions.attachment;\n    const samples = attachmentOptions.samples;\n    const format = attachmentOptions.format;\n    let attachmentPoint = attachmentOptions.attachmentPoint || getAttachmentPointForFormat(format, attachmentOptions.internalFormat);\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + i;\n    }\n    if (isColorAttachmentPoint(attachmentPoint)) {\n      usedColorAttachmentsPoints.push(attachmentPoint);\n    }\n    if (!attachment) {\n      if (samples !== undefined || isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(RENDERBUFFER, attachment);\n        if (samples > 1) {\n          gl.renderbufferStorageMultisample(RENDERBUFFER, samples, format, width, height);\n        } else {\n          gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n        }\n      } else {\n        const textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || CLAMP_TO_EDGE;\n        }\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      if (attachmentOptions.layer !== undefined) {\n        gl.framebufferTextureLayer(\n          target,\n          attachmentPoint,\n          attachment,\n          attachmentOptions.level || 0,\n          attachmentOptions.layer);\n      } else {\n        gl.framebufferTexture2D(\n            target,\n            attachmentPoint,\n            attachmentOptions.target || TEXTURE_2D,\n            attachment,\n            attachmentOptions.level || 0);\n      }\n    } else {\n      throw new Error('unknown attachment type');\n    }\n    framebufferInfo.attachments.push(attachment);\n  });\n  if (gl.drawBuffers) {\n    gl.drawBuffers(usedColorAttachmentsPoints);\n  }\n  return framebufferInfo;\n}\n\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function(attachmentOptions, ndx) {\n    const attachment = framebufferInfo.attachments[ndx];\n    const format = attachmentOptions.format;\n    const samples = attachmentOptions.samples;\n    if (samples !== undefined || helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(RENDERBUFFER, attachment);\n      if (samples > 1) {\n        gl.renderbufferStorageMultisample(RENDERBUFFER, samples, format, width, height);\n      } else {\n        gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n      }\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw new Error('unknown attachment type');\n    }\n  });\n}\n\n/**\n * Binds a framebuffer\n *\n * This function pretty much solely exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo|null} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If falsy will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || FRAMEBUFFER;\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\nexport {\n  bindFramebufferInfo,\n  createFramebufferInfo,\n  resizeFramebufferInfo,\n};\n\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function(name) {\n    const value = src[name];\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function(key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {  /* eslint no-prototype-builtins: 0 */\n      dst[key] = src[key];\n    }\n  });\n}\n\nfunction error(...args) {\n  console.error(...args);\n}\n\nfunction warn(...args) {\n  console.warn(...args);\n}\n\nconst isTypeWeakMaps = new Map();\n\nfunction isType(object, type) {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  let weakMap = isTypeWeakMaps.get(type);\n  if (!weakMap) {\n    weakMap = new WeakMap();\n    isTypeWeakMaps.set(type, weakMap);\n  }\n  let isOfType = weakMap.get(object);\n  if (isOfType === undefined) {\n    const s = Object.prototype.toString.call(object);\n    isOfType = s.substring(8, s.length - 1) === type;\n    weakMap.set(object, isOfType);\n  }\n  return isOfType;\n}\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && isType(t, 'WebGLBuffer');\n}\n\nfunction isRenderbuffer(gl, t) {\n  return typeof WebGLRenderbuffer !== 'undefined' && isType(t, 'WebGLRenderbuffer');\n}\n\nfunction isShader(gl, t) {\n  return typeof WebGLShader !== 'undefined' && isType(t, 'WebGLShader');\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && isType(t, 'WebGLTexture');\n}\n\nfunction isSampler(gl, t) {\n  return typeof WebGLSampler !== 'undefined' && isType(t, 'WebGLSampler');\n}\n\nexport {\n  copyExistingProperties,\n  copyNamedProperties,\n  error,\n  warn,\n  isBuffer,\n  isRenderbuffer,\n  isShader,\n  isTexture,\n  isSampler,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as v3 from './v3.js';\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nlet MatType = Float32Array;\n\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\nfunction setDefaultType(ctor) {\n  const oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = -m[ 0];\n  dst[ 1] = -m[ 1];\n  dst[ 2] = -m[ 2];\n  dst[ 3] = -m[ 3];\n  dst[ 4] = -m[ 4];\n  dst[ 5] = -m[ 5];\n  dst[ 6] = -m[ 6];\n  dst[ 7] = -m[ 7];\n  dst[ 8] = -m[ 8];\n  dst[ 9] = -m[ 9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n\n  return dst;\n}\n\n/**\n * Creates a matrix.\n * @return {module:twgl/m4.Mat4} A new matrix.\n * @memberOf module:twgl/m4\n */\nfunction create() {\n  return new MatType(16).fill(0);\n}\n\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m[ 0];\n  dst[ 1] = m[ 1];\n  dst[ 2] = m[ 2];\n  dst[ 3] = m[ 3];\n  dst[ 4] = m[ 4];\n  dst[ 5] = m[ 5];\n  dst[ 6] = m[ 6];\n  dst[ 7] = m[ 7];\n  dst[ 8] = m[ 8];\n  dst[ 9] = m[ 9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n function transpose(m, dst) {\n  dst = dst || new MatType(16);\n  if (dst === m) {\n    let t;\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  dst[ 0] = m00;\n  dst[ 1] = m10;\n  dst[ 2] = m20;\n  dst[ 3] = m30;\n  dst[ 4] = m01;\n  dst[ 5] = m11;\n  dst[ 6] = m21;\n  dst[ 7] = m31;\n  dst[ 8] = m02;\n  dst[ 9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n  const tmp_0  = m22 * m33;\n  const tmp_1  = m32 * m23;\n  const tmp_2  = m12 * m33;\n  const tmp_3  = m32 * m13;\n  const tmp_4  = m12 * m23;\n  const tmp_5  = m22 * m13;\n  const tmp_6  = m02 * m33;\n  const tmp_7  = m32 * m03;\n  const tmp_8  = m02 * m23;\n  const tmp_9  = m22 * m03;\n  const tmp_10 = m02 * m13;\n  const tmp_11 = m12 * m03;\n  const tmp_12 = m20 * m31;\n  const tmp_13 = m30 * m21;\n  const tmp_14 = m10 * m31;\n  const tmp_15 = m30 * m11;\n  const tmp_16 = m10 * m21;\n  const tmp_17 = m20 * m11;\n  const tmp_18 = m00 * m31;\n  const tmp_19 = m30 * m01;\n  const tmp_20 = m00 * m21;\n  const tmp_21 = m20 * m01;\n  const tmp_22 = m00 * m11;\n  const tmp_23 = m10 * m01;\n\n  const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n  const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[ 0] = d * t0;\n  dst[ 1] = d * t1;\n  dst[ 2] = d * t2;\n  dst[ 3] = d * t3;\n  dst[ 4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[ 5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[ 6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[ 7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[ 8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[ 9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n  return dst;\n}\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a13 = a[ 4 + 3];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const a23 = a[ 8 + 3];\n  const a30 = a[12 + 0];\n  const a31 = a[12 + 1];\n  const a32 = a[12 + 2];\n  const a33 = a[12 + 3];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b03 = b[3];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b13 = b[ 4 + 3];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n  const b23 = b[ 8 + 3];\n  const b30 = b[12 + 0];\n  const b31 = b[12 + 1];\n  const b32 = b[12 + 2];\n  const b33 = b[12 + 3];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n  return dst;\n}\n\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with translation set.\n * @memberOf module:twgl/m4\n */\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 3] = a[ 3];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n    dst[ 7] = a[ 7];\n    dst[ 8] = a[ 8];\n    dst[ 9] = a[ 9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with axis set.\n * @memberOf module:twgl/m4\n */\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  const rangeInv = 1.0 / (zNear - zFar);\n\n  dst[0]  = f / aspect;\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = f;\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0]  = 2 / (right - left);\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = 2 / (top - bottom);\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n  const dz = (near - far);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\nlet xAxis;\nlet yAxis;\nlet zAxis;\n\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || v3.create();\n  yAxis = yAxis || v3.create();\n  zAxis = zAxis || v3.create();\n\n  v3.normalize(\n      v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];\n  dst[ 1] = xAxis[1];\n  dst[ 2] = xAxis[2];\n  dst[ 3] = 0;\n  dst[ 4] = yAxis[0];\n  dst[ 5] = yAxis[1];\n  dst[ 6] = yAxis[2];\n  dst[ 7] = 0;\n  dst[ 8] = zAxis[0];\n  dst[ 9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translated matrix.\n * @memberOf module:twgl/m4\n */\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 3] = m03;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n    dst[ 7] = m13;\n    dst[ 8] = m20;\n    dst[ 9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = c;\n  dst[ 6] = s;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[4]  = c * m10 + s * m20;\n  dst[5]  = c * m11 + s * m21;\n  dst[6]  = c * m12 + s * m22;\n  dst[7]  = c * m13 + s * m23;\n  dst[8]  = c * m20 - s * m10;\n  dst[9]  = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = 0;\n  dst[ 2] = -s;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = s;\n  dst[ 9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 - s * m20;\n  dst[ 1] = c * m01 - s * m21;\n  dst[ 2] = c * m02 - s * m22;\n  dst[ 3] = c * m03 - s * m23;\n  dst[ 8] = c * m20 + s * m00;\n  dst[ 9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = s;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = -s;\n  dst[ 5] = c;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n  dst[ 3] = c * m03 + s * m13;\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n  dst[ 7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  dst[ 0] = xx + (1 - xx) * c;\n  dst[ 1] = x * y * oneMinusCosine + z * s;\n  dst[ 2] = x * z * oneMinusCosine - y * s;\n  dst[ 3] = 0;\n  dst[ 4] = x * y * oneMinusCosine - z * s;\n  dst[ 5] = yy + (1 - yy) * c;\n  dst[ 6] = y * z * oneMinusCosine + x * s;\n  dst[ 7] = 0;\n  dst[ 8] = x * z * oneMinusCosine + y * s;\n  dst[ 9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  const r00 = xx + (1 - xx) * c;\n  const r01 = x * y * oneMinusCosine + z * s;\n  const r02 = x * z * oneMinusCosine - y * s;\n  const r10 = x * y * oneMinusCosine - z * s;\n  const r11 = yy + (1 - yy) * c;\n  const r12 = y * z * oneMinusCosine + x * s;\n  const r20 = x * z * oneMinusCosine + y * s;\n  const r21 = y * z * oneMinusCosine - x * s;\n  const r22 = zz + (1 - zz) * c;\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v[0];\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = v[1];\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaled matrix.\n * @memberOf module:twgl/m4\n */\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n  dst[ 3] = v0 * m[0 * 4 + 3];\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n  dst[ 7] = v1 * m[1 * 4 + 3];\n  dst[ 8] = v2 * m[2 * 4 + 0];\n  dst[ 9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed point.\n * @memberOf module:twgl/m4\n */\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} [dst] optional Vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed normal.\n * @memberOf module:twgl/m4\n */\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  const mi = inverse(m);\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\nexport {\n  axisRotate,\n  axisRotation,\n  copy,\n  create,\n  frustum,\n  getAxis,\n  getTranslation,\n  identity,\n  inverse,\n  lookAt,\n  multiply,\n  negate,\n  ortho,\n  perspective,\n  rotateX,\n  rotateY,\n  rotateZ,\n  rotationX,\n  rotationY,\n  rotationZ,\n  scale,\n  scaling,\n  setAxis,\n  setDefaultType,\n  setTranslation,\n  transformDirection,\n  transformNormal,\n  transformPoint,\n  translate,\n  translation,\n  transpose,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returning a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneVertices(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nimport * as attributes from './attributes.js';\nimport * as helper from './helper.js';\nimport * as typedArrays from './typedarrays.js';\nimport * as m4 from './m4.js';\nimport * as v3 from './v3.js';\n\nconst getArray = attributes.getArray_;  // eslint-disable-line\nconst getNumComponents = attributes.getNumComponents_;  // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\nfunction augmentTypedArray(typedArray, numComponents) {\n  let cursor = 0;\n  typedArray.push = function() {\n    for (let ii = 0; ii < arguments.length; ++ii) {\n      const value = arguments[ii];\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (let jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n  typedArray.reset = function(opt_index) {\n    cursor = opt_index || 0;\n  };\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function() {\n      return this.length / this.numComponents | 0;\n    },\n  });\n  return typedArray;\n}\n\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  const Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\nfunction deindexVertices(vertices) {\n  const indices = vertices.indices;\n  const newVertices = {};\n  const numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    const srcBuffer = vertices[channel];\n    const numComponents = srcBuffer.numComponents;\n    const dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n    for (let ii = 0; ii < numElements; ++ii) {\n      const ndx = indices[ii];\n      const offset = ndx * numComponents;\n      for (let jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n\n  return newVertices;\n}\n\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw new Error('can not flatten normals of indexed vertices. deindex them first');\n  }\n\n  const normals = vertices.normal;\n  const numNormals = normals.length;\n  for (let ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    const nax = normals[ii + 0];\n    const nay = normals[ii + 1];\n    const naz = normals[ii + 2];\n\n    const nbx = normals[ii + 3];\n    const nby = normals[ii + 4];\n    const nbz = normals[ii + 5];\n\n    const ncx = normals[ii + 6];\n    const ncy = normals[ii + 7];\n    const ncz = normals[ii + 8];\n\n    // add them\n    let nx = nax + nbx + ncx;\n    let ny = nay + nby + ncy;\n    let nz = naz + nbz + ncz;\n\n    // normalize them\n    const length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n    nx /= length;\n    ny /= length;\n    nz /= length;\n\n    // copy them back in\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  const len = array.length;\n  const tmp = new Float32Array(3);\n  for (let ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii    ] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function(name) {\n    const array = arrays[name];\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [\n        xOffset + -1 * size, yOffset + -1 * size,\n        xOffset +  1 * size, yOffset + -1 * size,\n        xOffset + -1 * size, yOffset +  1 * size,\n        xOffset +  1 * size, yOffset +  1 * size,\n      ],\n    },\n    normal: [\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n    ],\n    texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1,\n    ],\n    indices: [ 0, 1, 2, 2, 1, 3 ],\n  };\n}\n\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createPlaneVertices(\n    width,\n    depth,\n    subdivisionsWidth,\n    subdivisionsDepth,\n    matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (let z = 0; z <= subdivisionsDepth; z++) {\n    for (let x = 0; x <= subdivisionsWidth; x++) {\n      const u = x / subdivisionsWidth;\n      const v = z / subdivisionsDepth;\n      positions.push(\n          width * u - width * 0.5,\n          0,\n          depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  const numVertsAcross = subdivisionsWidth + 1;\n  const indices = createAugmentedTypedArray(\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (z + 0) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x,\n          (z + 0) * numVertsAcross + x + 1);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (z + 1) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x + 1,\n          (z + 0) * numVertsAcross + x + 1);\n    }\n  }\n\n  const arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  }, matrix);\n  return arrays;\n}\n\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createSphereVertices(\n    radius,\n    subdivisionsAxis,\n    subdivisionsHeight,\n    opt_startLatitudeInRadians,\n    opt_endLatitudeInRadians,\n    opt_startLongitudeInRadians,\n    opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || (Math.PI * 2);\n\n  const latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  const longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\n\n  // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + opt_startLongitudeInRadians;\n      const phi = latRange * v + opt_startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (y + 0) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (y + 1) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1],  // right\n  [6, 2, 0, 4],  // left\n  [6, 7, 3, 2],  // ??\n  [0, 1, 5, 4],  // ??\n  [7, 6, 4, 5],  // front\n  [2, 3, 1, 0],  // back\n];\n\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createCubeVertices(size) {\n  size = size || 1;\n  const k = size / 2;\n\n  const cornerVertices = [\n    [-k, -k, -k],\n    [+k, -k, -k],\n    [-k, +k, -k],\n    [+k, +k, -k],\n    [-k, -k, +k],\n    [+k, -k, +k],\n    [-k, +k, +k],\n    [+k, +k, +k],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n\n  const numVertices = 6 * 4;\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      const uv = uvCoords[v];\n\n      // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n\n    }\n    // Two triangles make a square face.\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTruncatedConeVertices(\n    bottomRadius,\n    topRadius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    opt_topCap,\n    opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  const topCap = (opt_topCap === undefined) ? true : opt_topCap;\n  const bottomCap = (opt_bottomCap === undefined) ? true : opt_bottomCap;\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  // The slant of the cone is constant across its surface\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push((ii / radialSubdivisions), 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n    if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  const data = [];\n  for (let ii = 0; ii < rleData.length; ii += 4) {\n    const runLength = rleData[ii];\n    const element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n    for (let jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n  return data;\n}\n\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction create3DFVertices() {\n\n  const positions = [\n    // left column front\n    0,   0,  0,\n    0, 150,  0,\n    30,   0,  0,\n    0, 150,  0,\n    30, 150,  0,\n    30,   0,  0,\n\n    // top rung front\n    30,   0,  0,\n    30,  30,  0,\n    100,   0,  0,\n    30,  30,  0,\n    100,  30,  0,\n    100,   0,  0,\n\n    // middle rung front\n    30,  60,  0,\n    30,  90,  0,\n    67,  60,  0,\n    30,  90,  0,\n    67,  90,  0,\n    67,  60,  0,\n\n    // left column back\n      0,   0,  30,\n     30,   0,  30,\n      0, 150,  30,\n      0, 150,  30,\n     30,   0,  30,\n     30, 150,  30,\n\n    // top rung back\n     30,   0,  30,\n    100,   0,  30,\n     30,  30,  30,\n     30,  30,  30,\n    100,   0,  30,\n    100,  30,  30,\n\n    // middle rung back\n     30,  60,  30,\n     67,  60,  30,\n     30,  90,  30,\n     30,  90,  30,\n     67,  60,  30,\n     67,  90,  30,\n\n    // top\n      0,   0,   0,\n    100,   0,   0,\n    100,   0,  30,\n      0,   0,   0,\n    100,   0,  30,\n      0,   0,  30,\n\n    // top rung front\n    100,   0,   0,\n    100,  30,   0,\n    100,  30,  30,\n    100,   0,   0,\n    100,  30,  30,\n    100,   0,  30,\n\n    // under top rung\n    30,   30,   0,\n    30,   30,  30,\n    100,  30,  30,\n    30,   30,   0,\n    100,  30,  30,\n    100,  30,   0,\n\n    // between top rung and middle\n    30,   30,   0,\n    30,   60,  30,\n    30,   30,  30,\n    30,   30,   0,\n    30,   60,   0,\n    30,   60,  30,\n\n    // top of middle rung\n    30,   60,   0,\n    67,   60,  30,\n    30,   60,  30,\n    30,   60,   0,\n    67,   60,   0,\n    67,   60,  30,\n\n    // front of middle rung\n    67,   60,   0,\n    67,   90,  30,\n    67,   60,  30,\n    67,   60,   0,\n    67,   90,   0,\n    67,   90,  30,\n\n    // bottom of middle rung.\n    30,   90,   0,\n    30,   90,  30,\n    67,   90,  30,\n    30,   90,   0,\n    67,   90,  30,\n    67,   90,   0,\n\n    // front of bottom\n    30,   90,   0,\n    30,  150,  30,\n    30,   90,  30,\n    30,   90,   0,\n    30,  150,   0,\n    30,  150,  30,\n\n    // bottom\n    0,   150,   0,\n    0,   150,  30,\n    30,  150,  30,\n    0,   150,   0,\n    30,  150,  30,\n    30,  150,   0,\n\n    // left side\n    0,   0,   0,\n    0,   0,  30,\n    0, 150,  30,\n    0,   0,   0,\n    0, 150,  30,\n    0, 150,   0,\n  ];\n\n  const texcoords = [\n    // left column front\n    0.22, 0.19,\n    0.22, 0.79,\n    0.34, 0.19,\n    0.22, 0.79,\n    0.34, 0.79,\n    0.34, 0.19,\n\n    // top rung front\n    0.34, 0.19,\n    0.34, 0.31,\n    0.62, 0.19,\n    0.34, 0.31,\n    0.62, 0.31,\n    0.62, 0.19,\n\n    // middle rung front\n    0.34, 0.43,\n    0.34, 0.55,\n    0.49, 0.43,\n    0.34, 0.55,\n    0.49, 0.55,\n    0.49, 0.43,\n\n    // left column back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // middle rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // top rung front\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // under top rung\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // between top rung and middle\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // top of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // front of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom of middle rung.\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // front of bottom\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // left side\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n  ];\n\n  const normals = expandRLEData([\n    // left column front\n    // top rung front\n    // middle rung front\n    18, 0, 0, 1,\n\n    // left column back\n    // top rung back\n    // middle rung back\n    18, 0, 0, -1,\n\n    // top\n    6, 0, 1, 0,\n\n    // top rung front\n    6, 1, 0, 0,\n\n    // under top rung\n    6, 0, -1, 0,\n\n    // between top rung and middle\n    6, 1, 0, 0,\n\n    // top of middle rung\n    6, 0, 1, 0,\n\n    // front of middle rung\n    6, 1, 0, 0,\n\n    // bottom of middle rung.\n    6, 0, -1, 0,\n\n    // front of bottom\n    6, 1, 0, 0,\n\n    // bottom\n    6, 0, -1, 0,\n\n    // left side\n    6, -1, 0, 0,\n  ]);\n\n  const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n      18, 200,  70, 120,\n\n        // left column back\n        // top rung back\n        // middle rung back\n      18, 80, 70, 200,\n\n        // top\n      6, 70, 200, 210,\n\n        // top rung front\n      6, 200, 200, 70,\n\n        // under top rung\n      6, 210, 100, 70,\n\n        // between top rung and middle\n      6, 210, 160, 70,\n\n        // top of middle rung\n      6, 70, 180, 210,\n\n        // front of middle rung\n      6, 100, 70, 210,\n\n        // bottom of middle rung.\n      6, 76, 210, 100,\n\n        // front of bottom\n      6, 140, 210, 80,\n\n        // bottom\n      6, 90, 130, 110,\n\n        // left side\n      6, 160, 160, 220,\n  ], [255]);\n\n  const numVerts = positions.length / 3;\n\n  const arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2,  numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n  };\n\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (let ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCrescentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCrescentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n function createCrescentVertices(\n    verticalRadius,\n    outerRadius,\n    innerRadius,\n    thickness,\n    subdivisionsDown,\n    startOffset,\n    endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw new Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset   = endOffset || 1;\n\n  const subdivisionsThick = 2;\n\n  const offsetRange = endOffset - startOffset;\n  const numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (let z = 0; z <= subdivisionsDown; z++) {\n      const uBack = x / (subdivisionsThick - 1);\n      const v = z / subdivisionsDown;\n      const xBack = (uBack - 0.5) * 2;\n      const angle = (startOffset + (v * offsetRange)) * Math.PI;\n      const s = Math.sin(angle);\n      const c = Math.cos(angle);\n      const radius = lerp(verticalRadius, arcRadius, s);\n      const px = xBack * thickness;\n      const py = c * verticalRadius;\n      const pz = s * radius;\n      positions.push(px, py, pz);\n      const n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  }\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let x = 0; x < subdivisionsThick; x++) {\n    const uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  }\n\n  // Do outer surface.\n  const indices = createAugmentedTypedArray(3, (subdivisionsDown * 2) * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (let z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(\n          leftArcOffset + z + 0,\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 0);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 1,\n          rightArcOffset + z + 0);\n    }\n  }\n\n  const numVerticesDown = subdivisionsDown + 1;\n  // front\n  createSurface(numVerticesDown * 0, numVerticesDown * 4);\n  // right\n  createSurface(numVerticesDown * 5, numVerticesDown * 7);\n  // back\n  createSurface(numVerticesDown * 6, numVerticesDown * 2);\n  // left\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n /**\n  * Creates cylinder buffers. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, WebGLBuffer>} The created buffers.\n  * @memberOf module:twgl/primitives\n  * @function createCylinderBuffers\n  */\n\n /**\n  * Creates cylinder vertices. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, TypedArray>} The created vertices.\n  * @memberOf module:twgl/primitives\n  */\nfunction createCylinderVertices(\n    radius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    topCap,\n    bottomCap) {\n  return createTruncatedConeVertices(\n      radius,\n      radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap);\n}\n\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTorusVertices(\n    radius,\n    thickness,\n    radialSubdivisions,\n    bodySubdivisions,\n    startAngle,\n    endAngle) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  const range = endAngle - startAngle;\n\n  const radialParts = radialSubdivisions + 1;\n  const bodyParts   = bodySubdivisions + 1;\n  const numVertices = radialParts * bodyParts;\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n  for (let slice = 0; slice < bodyParts; ++slice) {\n    const v = slice / bodySubdivisions;\n    const sliceAngle = v * Math.PI * 2;\n    const sliceSin = Math.sin(sliceAngle);\n    const ringRadius = radius + sliceSin * thickness;\n    const ny = Math.cos(sliceAngle);\n    const y = ny * thickness;\n    for (let ring = 0; ring < radialParts; ++ring) {\n      const u = ring / radialSubdivisions;\n      const ringAngle = startAngle + u * range;\n      const xSin = Math.sin(ringAngle);\n      const zCos = Math.cos(ringAngle);\n      const x = xSin * ringRadius;\n      const z = zCos * ringRadius;\n      const nx = xSin * sliceSin;\n      const nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n      const nextRingIndex  = 1 + ring;\n      const nextSliceIndex = 1 + slice;\n      indices.push(radialParts * slice          + ring,\n                   radialParts * nextSliceIndex + ring,\n                   radialParts * slice          + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + ring,\n                   radialParts * nextSliceIndex + nextRingIndex,\n                   radialParts * slice          + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createDiscVertices(\n    radius,\n    divisions,\n    stacks,\n    innerRadius,\n    stackPower) {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0;\n\n  // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n  const numVertices = (divisions + 1) * (stacks + 1);\n\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n  let firstIndex = 0;\n  const radiusSpan = radius - innerRadius;\n  const pointsPerStack = divisions + 1;\n\n  // Build the disk one stack at a time.\n  for (let stack = 0; stack <= stacks; ++stack) {\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (let i = 0; i <= divisions; ++i) {\n      const theta = 2.0 * Math.PI * i / divisions;\n      const x = stackRadius * Math.cos(theta);\n      const z = stackRadius * Math.sin(theta);\n\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - (i / divisions), stack / stacks);\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        const a = firstIndex + (i + 1);\n        const b = firstIndex + i;\n        const c = firstIndex + i - pointsPerStack;\n        const d = firstIndex + (i + 1) - pointsPerStack;\n\n        // Make a quad of the vertices a, b, c, d.\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  const numElements = vertices.position.numElements;\n  const vColors = createAugmentedTypedArray(4, numElements, Uint8Array);\n  const rand = options.rand || function(ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n  vertices.color = vColors;\n  if (vertices.indices) {\n    // just make random colors if index\n    for (let ii = 0; ii < numElements; ++ii) {\n      vColors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    const numVertsPerColor = options.vertsPerColor || 3;\n    const numSets = numElements / numVertsPerColor;\n    for (let ii = 0; ii < numSets; ++ii) {  // eslint-disable-line\n      const color = [rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3)];\n      for (let jj = 0; jj < numVertsPerColor; ++jj) {\n        vColors.push(color);\n      }\n    }\n  }\n  return vertices;\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\nfunction createBufferFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\nfunction createBufferInfoFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(null,  Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nconst arraySpecPropertyNames = [\n  \"numComponents\",\n  \"size\",\n  \"type\",\n  \"normalize\",\n  \"stride\",\n  \"offset\",\n  \"attrib\",\n  \"name\",\n  \"attribName\",\n];\n\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  const length = src.length;\n  for (let ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\nfunction createArrayOfSameType(srcArray, length) {\n  const arraySrc = getArray(srcArray);\n  const newArray = new arraySrc.constructor(length);\n  let newArraySpec = newArray;\n  // If it appears to have been augmented make new one augmented\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  }\n  // If it was a full spec make new one a full spec\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray,\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n  return newArraySpec;\n}\n\n/**\n * Concatenates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primitives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatenated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction concatVertices(arrayOfArrays) {\n  const names = {};\n  let baseName;\n  // get names of all arrays.\n  // and numElements for each set of vertices\n  for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n    const arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function(name) {  // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n      const arrayInfo = arrays[name];\n      const numComponents = getNumComponents(arrayInfo, name);\n      const array = getArray(arrayInfo);\n      const numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  }\n\n  // compute length of combined array\n  // and return one for reference\n  function getLengthOfCombinedArrays(name) {\n    let length = 0;\n    let arraySpec;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray(arrayInfo);\n      length += array.length;\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n    return {\n      length: length,\n      spec: arraySpec,\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    let baseIndex = 0;\n    let offset = 0;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray(arrayInfo);\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n      offset += array.length;\n    }\n  }\n\n  const base = names[baseName];\n\n  const newArrays = {};\n  Object.keys(names).forEach(function(name) {\n    const info = getLengthOfCombinedArrays(name);\n    const newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The duplicated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction duplicateVertices(arrays) {\n  const newArrays = {};\n  Object.keys(arrays).forEach(function(name) {\n    const arraySpec = arrays[name];\n    const srcArray = getArray(arraySpec);\n    const newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nconst create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nconst create3DFBuffers = createBufferFunc(create3DFVertices);\nconst createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nconst createCubeBuffers = createBufferFunc(createCubeVertices);\nconst createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nconst createPlaneBuffers = createBufferFunc(createPlaneVertices);\nconst createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nconst createSphereBuffers = createBufferFunc(createSphereVertices);\nconst createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nconst createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nconst createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nconst createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nconst createCrescentBufferInfo = createBufferInfoFunc(createCrescentVertices);\nconst createCrescentBuffers = createBufferFunc(createCrescentVertices);\nconst createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nconst createCylinderBuffers = createBufferFunc(createCylinderVertices);\nconst createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nconst createTorusBuffers = createBufferFunc(createTorusVertices);\nconst createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nconst createDiscBuffers = createBufferFunc(createDiscVertices);\n\n// these were mis-spelled until 4.12\nconst createCresentBufferInfo = createCrescentBufferInfo;\nconst createCresentBuffers = createCrescentBuffers;\nconst createCresentVertices = createCrescentVertices;\n\nexport {\n  create3DFBufferInfo,\n  create3DFBuffers,\n  create3DFVertices,\n  createAugmentedTypedArray,\n  createCubeBufferInfo,\n  createCubeBuffers,\n  createCubeVertices,\n  createPlaneBufferInfo,\n  createPlaneBuffers,\n  createPlaneVertices,\n  createSphereBufferInfo,\n  createSphereBuffers,\n  createSphereVertices,\n  createTruncatedConeBufferInfo,\n  createTruncatedConeBuffers,\n  createTruncatedConeVertices,\n  createXYQuadBufferInfo,\n  createXYQuadBuffers,\n  createXYQuadVertices,\n  createCresentBufferInfo,\n  createCresentBuffers,\n  createCresentVertices,\n  createCrescentBufferInfo,\n  createCrescentBuffers,\n  createCrescentVertices,\n  createCylinderBufferInfo,\n  createCylinderBuffers,\n  createCylinderVertices,\n  createTorusBufferInfo,\n  createTorusBuffers,\n  createTorusVertices,\n  createDiscBufferInfo,\n  createDiscBuffers,\n  createDiscVertices,\n  deindexVertices,\n  flattenNormals,\n  makeRandomVertexColors,\n  reorientDirections,\n  reorientNormals,\n  reorientPositions,\n  reorientVertices,\n  concatVertices,\n  duplicateVertices,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as utils from './utils.js';\nimport * as helper from './helper.js';\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\n\nconst error = helper.error;\nconst warn = helper.warn;\nfunction getElementById(id) {\n  return (typeof document !== 'undefined' && document.getElementById)\n      ? document.getElementById(id)\n      : null;\n}\n\nconst TEXTURE0                       = 0x84c0;\nconst DYNAMIC_DRAW                   = 0x88e8;\n\nconst ARRAY_BUFFER                   = 0x8892;\nconst ELEMENT_ARRAY_BUFFER           = 0x8893;\nconst UNIFORM_BUFFER                 = 0x8a11;\nconst TRANSFORM_FEEDBACK_BUFFER      = 0x8c8e;\n\nconst TRANSFORM_FEEDBACK             = 0x8e22;\n\nconst COMPILE_STATUS                 = 0x8b81;\nconst LINK_STATUS                    = 0x8b82;\nconst FRAGMENT_SHADER                = 0x8b30;\nconst VERTEX_SHADER                  = 0x8b31;\nconst SEPARATE_ATTRIBS               = 0x8c8d;\n\nconst ACTIVE_UNIFORMS                = 0x8b86;\nconst ACTIVE_ATTRIBUTES              = 0x8b89;\nconst TRANSFORM_FEEDBACK_VARYINGS    = 0x8c83;\nconst ACTIVE_UNIFORM_BLOCKS          = 0x8a36;\nconst UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER   = 0x8a44;\nconst UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\nconst UNIFORM_BLOCK_DATA_SIZE                     = 0x8a40;\nconst UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES        = 0x8a43;\n\nconst FLOAT                         = 0x1406;\nconst FLOAT_VEC2                    = 0x8B50;\nconst FLOAT_VEC3                    = 0x8B51;\nconst FLOAT_VEC4                    = 0x8B52;\nconst INT                           = 0x1404;\nconst INT_VEC2                      = 0x8B53;\nconst INT_VEC3                      = 0x8B54;\nconst INT_VEC4                      = 0x8B55;\nconst BOOL                          = 0x8B56;\nconst BOOL_VEC2                     = 0x8B57;\nconst BOOL_VEC3                     = 0x8B58;\nconst BOOL_VEC4                     = 0x8B59;\nconst FLOAT_MAT2                    = 0x8B5A;\nconst FLOAT_MAT3                    = 0x8B5B;\nconst FLOAT_MAT4                    = 0x8B5C;\nconst SAMPLER_2D                    = 0x8B5E;\nconst SAMPLER_CUBE                  = 0x8B60;\nconst SAMPLER_3D                    = 0x8B5F;\nconst SAMPLER_2D_SHADOW             = 0x8B62;\nconst FLOAT_MAT2x3                  = 0x8B65;\nconst FLOAT_MAT2x4                  = 0x8B66;\nconst FLOAT_MAT3x2                  = 0x8B67;\nconst FLOAT_MAT3x4                  = 0x8B68;\nconst FLOAT_MAT4x2                  = 0x8B69;\nconst FLOAT_MAT4x3                  = 0x8B6A;\nconst SAMPLER_2D_ARRAY              = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW           = 0x8DC5;\nconst UNSIGNED_INT                  = 0x1405;\nconst UNSIGNED_INT_VEC2             = 0x8DC6;\nconst UNSIGNED_INT_VEC3             = 0x8DC7;\nconst UNSIGNED_INT_VEC4             = 0x8DC8;\nconst INT_SAMPLER_2D                = 0x8DCA;\nconst INT_SAMPLER_3D                = 0x8DCB;\nconst INT_SAMPLER_CUBE              = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY          = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D                    = 0x0DE1;\nconst TEXTURE_CUBE_MAP              = 0x8513;\nconst TEXTURE_3D                    = 0x806F;\nconst TEXTURE_2D_ARRAY              = 0x8C1A;\n\nconst typeMap = {};\n\n/**\n * Returns the corresponding bind point for a given sampler type\n * @private\n */\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n}\n\n// This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\nfunction floatSetter(gl, location) {\n  return function(v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function(v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function(v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function(textureOrPair) {\n    let texture;\n    let sampler;\n    if (!textureOrPair || helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function(texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  const units = new Int32Array(size);\n  for (let ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(textureOrPair, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      let texture;\n      let sampler;\n      if (!textureOrPair || helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(texture, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\ntypeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  cols: 2, };\ntypeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  cols: 3, };\ntypeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  cols: 4, };\ntypeMap[INT]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[UNSIGNED_INT]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\ntypeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   cols: 2, };\ntypeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   cols: 3, };\ntypeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   cols: 4, };\ntypeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 32, setter: floatMat2Setter,  rows: 2, cols: 2, };\ntypeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 48, setter: floatMat3Setter,  rows: 3, cols: 3, };\ntypeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  rows: 4, cols: 4, };\ntypeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 32, setter: floatMat23Setter, rows: 2, cols: 3, };\ntypeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, rows: 2, cols: 4, };\ntypeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 48, setter: floatMat32Setter, rows: 3, cols: 2, };\ntypeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, rows: 3, cols: 4, };\ntypeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 64, setter: floatMat42Setter, rows: 4, cols: 2, };\ntypeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 64, setter: floatMat43Setter, rows: 4, cols: 3, };\ntypeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\ntypeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\ntypeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\ntypeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\ntypeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\ntypeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\ntypeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\ntypeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\ntypeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n\nfunction floatAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(\n          index, b.numComponents || b.size, b.type || FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index, b.divisor || 0);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || INT, b.stride || 0, b.offset || 0);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index, b.divisor || 0);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || UNSIGNED_INT, b.stride || 0, b.offset || 0);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index, b.divisor || 0);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  const defaultSize = typeInfo.size;\n  const count = typeInfo.count;\n\n  return function(b) {\n    gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n    const numComponents = b.size || b.numComponents || defaultSize;\n    const size = numComponents / count;\n    const type = b.type || FLOAT;\n    const typeInfo = typeMap[type];\n    const stride = typeInfo.size * numComponents;\n    const normalize = b.normalize || false;\n    const offset = b.offset || 0;\n    const rowOffset = stride / count;\n    for (let i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(\n          index + i, size, type, normalize, stride, offset + rowOffset * i);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index + i, b.divisor || 0);\n      }\n    }\n  };\n}\n\n\n\nconst attrTypeMap = {};\nattrTypeMap[FLOAT]             = { size:  4, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC2]        = { size:  8, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC3]        = { size: 12, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC4]        = { size: 16, setter: floatAttribSetter, };\nattrTypeMap[INT]               = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC2]          = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC3]          = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC4]          = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[UNSIGNED_INT]      = { size:  4, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC2] = { size:  8, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC3] = { size: 12, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC4] = { size: 16, setter: uintAttribSetter,  };\nattrTypeMap[BOOL]              = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC2]         = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC3]         = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC4]         = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[FLOAT_MAT2]        = { size:  4, setter: matAttribSetter,   count: 2, };\nattrTypeMap[FLOAT_MAT3]        = { size:  9, setter: matAttribSetter,   count: 3, };\nattrTypeMap[FLOAT_MAT4]        = { size: 16, setter: matAttribSetter,   count: 4, };\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\n\nconst errorRE = /ERROR:\\s*\\d+:(\\d+)/gi;\nfunction addLineNumbersWithError(src, log = '', lineOffset = 0) {\n  // Note: Error message formats are not defined by any spec so this may or may not work.\n  const matches = [...log.matchAll(errorRE)];\n  const lineNoToErrorMap = new Map(matches.map((m, ndx) => {\n    const lineNo = parseInt(m[1]);\n    const next = matches[ndx + 1];\n    const end = next ? next.index : log.length;\n    const msg = log.substring(m.index, end);\n    return [lineNo - 1, msg];\n  }));\n  return src.split('\\n').map((line, lineNo) => {\n    const err = lineNoToErrorMap.get(lineNo);\n    return `${lineNo + 1 + lineOffset}: ${line}${err ? `\\n\\n^^^ ${err}` : ''}`;\n  }).join('\\n');\n}\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\n/**\n * Program Callback\n * @callback ProgramCallback\n * @param {string} [err] error message, falsy if no error\n * @param {WebGLProgram|module:twgl.ProgramInfo} [result] the program or programInfo\n */\n\nconst spaceRE = /^[ \\t]*\\n/;\n\n/**\n * Remove the first end of line because WebGL 2.0 requires\n * #version 300 es\n * as the first line. No whitespace allowed before that line\n * so\n *\n * <script>\n * #version 300 es\n * </script>\n *\n * Has one line before it which is invalid according to GLSL ES 3.00\n *\n * @param {string} shaderSource The source of the shader\n * @returns {{shaderSource: string, lineOffset: number}}\n * @private\n */\nfunction prepShaderSource(shaderSource) {\n  let lineOffset = 0;\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  }\n  return {lineOffset, shaderSource};\n}\n\n/**\n * @param {module:twgl.ProgramOptions} progOptions\n * @param {string} msg\n * @return null\n * @private\n */\nfunction reportError(progOptions, msg) {\n  progOptions.errorCallback(msg);\n  if (progOptions.callback) {\n    setTimeout(() => {\n      progOptions.callback(`${msg}\\n${progOptions.errors.join('\\n')}`);\n    });\n  }\n  return null;\n}\n\n/**\n * Check Shader status\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {number} shaderType The shader type\n * @param {WebGLShader} shader The shader\n * @param {ErrorCallback} [errFn] function to receive error message.\n * @return {string} errors or empty string\n * @private\n */\nfunction checkShaderStatus(gl, shaderType, shader, errFn) {\n  errFn = errFn || error;\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, COMPILE_STATUS);\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    const lastError = gl.getShaderInfoLog(shader);\n    const {lineOffset, shaderSource} = prepShaderSource(gl.getShaderSource(shader));\n    const error = `${addLineNumbersWithError(shaderSource, lastError, lineOffset)}\\nError compiling ${utils.glEnumToString(gl, shaderType)}: ${lastError}`;\n    errFn(error);\n    return error;\n  }\n  return '';\n}\n\n/**\n * @typedef {Object} FullProgramSpec\n * @property {string[]} shaders the shader source or element ids.\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>|string[]} [attribLocations] a attribute name to location map, or array of attribute names where index = location.\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @property {ProgramCallback} [callback] callback for async program compilation.\n * @memberOf module:twgl\n */\n\n/**\n * @typedef {string[]|module:twgl.FullProgramSpec} ProgramSpec\n * @memberOf module:twgl\n */\n\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>|string[]} [attribLocations] a attribute name to location map, or array of attribute names where index = location.\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @property {ProgramCallback} [callback] callback for async program compilation.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments passed in\n * @private\n */\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  let transformFeedbackVaryings;\n  let transformFeedbackMode;\n  let callback;\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    const opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n    transformFeedbackMode = opt.transformFeedbackMode;\n    callback = opt.callback;\n  }\n\n  const errorCallback = opt_errorCallback || error;\n  const errors = [];\n  const options = {\n    errorCallback(msg, ...args) {\n      errors.push(msg);\n      errorCallback(msg, ...args);\n    },\n    transformFeedbackVaryings,\n    transformFeedbackMode,\n    callback,\n    errors,\n  };\n\n  {\n    let attribLocations = {};\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function(attrib,  ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs || {};\n    }\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nconst defaultShaderType = [\n  \"VERTEX_SHADER\",\n  \"FRAGMENT_SHADER\",\n];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return VERTEX_SHADER;\n  }\n  return undefined;\n}\n\nfunction deleteProgramAndShaders(gl, program, notThese) {\n  const shaders = gl.getAttachedShaders(program);\n  for (const shader of shaders) {\n    if (notThese.has(shader)) {\n      gl.deleteShader(shader);\n    }\n  }\n  gl.deleteProgram(program);\n}\n\nconst wait = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction createProgramNoCheck(gl, shaders, programOptions) {\n  const program = gl.createProgram();\n  const {\n    attribLocations,\n    transformFeedbackVaryings,\n    transformFeedbackMode,\n  } = getProgramOptions(programOptions);\n\n  for (let ndx = 0; ndx < shaders.length; ++ndx) {\n    let shader = shaders[ndx];\n    if (typeof shader === 'string') {\n      const elem = getElementById(shader);\n      const src = elem ? elem.text : shader;\n      let type = gl[defaultShaderType[ndx]];\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n      shader = gl.createShader(type);\n      gl.shaderSource(shader, prepShaderSource(src).shaderSource);\n      gl.compileShader(shader);\n      gl.attachShader(program, shader);\n    }\n  }\n\n  Object.entries(attribLocations).forEach(([attrib, loc]) => gl.bindAttribLocation(program, loc, attrib));\n\n  {\n    let varyings = transformFeedbackVaryings;\n    if (varyings) {\n      if (varyings.attribs) {\n        varyings = varyings.attribs;\n      }\n      if (!Array.isArray(varyings)) {\n        varyings = Object.keys(varyings);\n      }\n      gl.transformFeedbackVaryings(program, varyings, transformFeedbackMode || SEPARATE_ATTRIBS);\n    }\n  }\n\n  gl.linkProgram(program);\n  return program;\n}\n\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error of a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgram(\n    gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  // This code is really convoluted, because it may or may not be async\n  // Maybe it would be better to have a separate function\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaderSet = new Set(shaders);\n  const program = createProgramNoCheck(gl, shaders, progOptions);\n\n  function hasErrors(gl, program) {\n    const errors = getProgramErrors(gl, program, progOptions.errorCallback);\n    if (errors) {\n      deleteProgramAndShaders(gl, program, shaderSet);\n    }\n    return errors;\n  }\n\n  if (progOptions.callback) {\n    waitForProgramLinkCompletionAsync(gl, program).then(() => {\n      const errors = hasErrors(gl, program);\n      progOptions.callback(errors, errors ? undefined : program);\n    });\n    return undefined;\n  }\n\n  return hasErrors(gl, program) ? undefined : program;\n}\n\n/**\n * This only works because the functions it wraps the first 2 arguments\n * are gl and any, followed by things that become programOptions\n * @private\n */\nfunction wrapCallbackFnToAsyncFn(fn) {\n  return function(gl, arg1, ...args) {\n    return new Promise((resolve, reject) => {\n      const programOptions = getProgramOptions(...args);\n      programOptions.callback = (err, program) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(program);\n        }\n      };\n      fn(gl, arg1, programOptions);\n    });\n  };\n}\n\n/**\n * Same as createProgram but returns a promise\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramAsync(gl, [vs, fs], options);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @function\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {Promise<WebGLProgram>} The created program\n * @memberOf module:twgl/programs\n */\nconst createProgramAsync = wrapCallbackFnToAsyncFn(createProgram);\n\n/**\n * Same as createProgramInfo but returns a promise\n * @function\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {Promise<module:twgl.ProgramInfo>} The created ProgramInfo\n * @memberOf module:twgl/programs\n */\nconst createProgramInfoAsync = wrapCallbackFnToAsyncFn(createProgramInfo);\n\nasync function waitForProgramLinkCompletionAsync(gl, program) {\n  const ext = gl.getExtension('KHR_parallel_shader_compile');\n  const checkFn = ext\n      ? (gl, program) => gl.getProgramParameter(program, ext.COMPLETION_STATUS_KHR)\n      : () => true;\n\n  let waitTime = 0;\n  do {\n    await wait(waitTime);  // must wait at least once\n    waitTime = 1000 / 60;\n  } while (!checkFn(gl, program));\n}\n\nasync function waitForAllProgramsLinkCompletionAsync(gl, programs) {\n  for (const program of Object.values(programs)) {\n    await waitForProgramLinkCompletionAsync(gl, program);\n  }\n}\n\n/**\n * Check a program's link status\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program Program to check\n * @param {ErrorCallback} [errFn] func for errors\n * @return {string?} errors if program is failed, else undefined\n * @private\n */\nfunction getProgramErrors(gl, program, errFn) {\n  errFn = errFn || error;\n  // Check the link status\n  const linked = gl.getProgramParameter(program, LINK_STATUS);\n  if (!linked) {\n    // something went wrong with the link\n    const lastError = gl.getProgramInfoLog(program);\n    errFn(`Error in program linking: ${lastError}`);\n    // print any errors from these shaders\n    const shaders = gl.getAttachedShaders(program);\n    const errors = shaders.map(shader => checkShaderStatus(gl, gl.getShaderParameter(shader, gl.SHADER_TYPE), shader, errFn));\n    return `${lastError}\\n${errors.filter(_ => _).join('\\n')}`;\n  }\n  return undefined;\n}\n\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error or a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromScripts(\n    gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (const scriptId of shaderScriptIds) {\n    const shaderScript = getElementById(scriptId);\n    if (!shaderScript) {\n      return reportError(progOptions, `unknown script element: ${scriptId}`);\n    }\n    shaders.push(shaderScript.text);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error or a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromSources(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  return createProgram(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback);\n}\n\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\nfunction isBuiltIn(info) {\n  const name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n\nconst tokenRE = /(\\.|\\[|]|\\w+)/g;\nconst isDigit = s => s >= '0' && s <= '9';\nfunction addSetterToUniformTree(fullPath, setter, node, uniformSetters) {\n  const tokens = fullPath.split(tokenRE).filter(s => s !== '');\n  let tokenNdx = 0;\n  let path = '';\n\n  for (;;) {\n    const token = tokens[tokenNdx++];  // has to be name or number\n    path += token;\n    const isArrayIndex = isDigit(token[0]);\n    const accessor = isArrayIndex\n        ? parseInt(token)\n        : token;\n    if (isArrayIndex) {\n      path += tokens[tokenNdx++];  // skip ']'\n    }\n    const isLastToken = tokenNdx === tokens.length;\n    if (isLastToken) {\n      node[accessor] = setter;\n      break;\n    } else {\n      const token = tokens[tokenNdx++];  // has to be . or [\n      const isArray = token === '[';\n      const child = node[accessor] || (isArray ? [] : {});\n      node[accessor] = child;\n      node = child;\n      uniformSetters[path] = uniformSetters[path] || function(node) {\n        return function(value) {\n          setUniformTree(node, value);\n        };\n      }(child);\n      path += token;\n    }\n  }\n}\n\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\nfunction createUniformSetters(gl, program) {\n  let textureUnit = 0;\n\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n  function createUniformSetter(program, uniformInfo, location) {\n    const isArray = uniformInfo.name.endsWith(\"[0]\");\n    const type = uniformInfo.type;\n    const typeInfo = typeMap[type];\n    if (!typeInfo) {\n      throw new Error(`unknown type: 0x${type.toString(16)}`); // we should never get here.\n    }\n    let setter;\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      const unit = textureUnit;\n      textureUnit += uniformInfo.size;\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n    setter.location = location;\n    return setter;\n  }\n\n  const uniformSetters = {};\n  const uniformTree = {};\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n    let name = uniformInfo.name;\n    // remove the array suffix.\n    if (name.endsWith(\"[0]\")) {\n      name = name.substr(0, name.length - 3);\n    }\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    // the uniform will have no location if it's in a uniform block\n    if (location) {\n      const setter = createUniformSetter(program, uniformInfo, location);\n      uniformSetters[name] = setter;\n      addSetterToUniformTree(name, setter, uniformTree, uniformSetters);\n    }\n  }\n\n  return uniformSetters;\n}\n\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\nfunction createTransformFeedbackInfo(gl, program) {\n  const info = {};\n  const numVaryings = gl.getProgramParameter(program, TRANSFORM_FEEDBACK_VARYINGS);\n  for (let ii = 0; ii < numVaryings; ++ii) {\n    const varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size,\n    };\n  }\n  return info;\n}\n\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n  for (const name in bufferInfo) {\n    const varying = transformFeedbackInfo[name];\n    if (varying) {\n      const buf = bufferInfo[name];\n      if (buf.offset) {\n        gl.bindBufferRange(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  const tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n\n/**\n * @typedef {Object} UniformData\n * @property {string} name The name of the uniform\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanatory\n * @property {bool} usedByFragmentShader Self explanatory\n * @property {bool} used Self explanatory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec>} blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n  const uniformData = [];\n  const uniformIndices = [];\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [\n    [ \"UNIFORM_TYPE\", \"type\" ],\n    [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\n    [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\n    [ \"UNIFORM_OFFSET\", \"offset\", ],\n  ].forEach(function(pair) {\n    const pname = pair[0];\n    const key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n\n  const blockSpecs = {};\n\n  const numUniformBlocks = gl.getProgramParameter(program, ACTIVE_UNIFORM_BLOCKS);\n  for (let ii = 0; ii < numUniformBlocks; ++ii) {\n    const name = gl.getActiveUniformBlockName(program, ii);\n    const blockSpec = {\n      index: gl.getUniformBlockIndex(program, name),\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    };\n    blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData,\n  };\n}\n\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;  // better way to check?\n\nconst pad = (v, padding) => ((v + (padding - 1)) / padding | 0) * padding;\n\nfunction createUniformBlockUniformSetter(view, isArray, rows, cols) {\n  if (isArray || rows) {\n    cols = cols || 1;\n    const numElements = view.length;\n    const totalRows = numElements / 4;\n    return function(value) {\n      let dst = 0;\n      let src = 0;\n      for (let row = 0; row < totalRows; ++row) {\n        for (let col = 0; col < cols; ++col) {\n          view[dst++] = value[src++];\n        }\n        dst += 4 - cols;\n      }\n    };\n  } else {\n    return function(value) {\n      if (value.length) {\n        view.set(value);\n      } else {\n        view[0] = value;\n      }\n    };\n  }\n}\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {Uint8Array} asUint8t A uint8 view on the array buffer.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @property {Object<string, function>} setters A setter for this uniform.\n *   The reason to use setters is elements of arrays are padded to vec4 sizes which\n *   means if you want to set an array of 4 floats you'd need to set 16 values\n *   (or set elements 0, 4, 8, 12). In other words\n *   `someBlockInfo.uniforms.some4FloatArrayUniform.set([0, , , , 1, , , , 2, , , , 3])`\n *   where as the setter handles just passing in [0, 1, 2, 3] either directly as in\n *   `someBlockInfo.setter.some4FloatArrayUniform.set([0, 1, 2, 3])` (not recommended)\n *   or via {@link module:twgl.setBlockUniforms}\n * @memberOf module:twgl\n */\n\n/**\n * Options to allow createUniformBlockInfo to use an existing buffer and arrayBuffer at an offset\n * @typedef {Object} UniformBlockInfoOptions\n * @property {ArrayBuffer} [array] an existing array buffer to use for values\n * @property {number} [offset] the offset in bytes to use in the array buffer (default = 0)\n * @property {WebGLBuffer} [buffer] the buffer to use for this uniform block info\n * @property {number} [bufferOffset] the offset in bytes in the buffer to use (default = use offset above)\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uniformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @param {module:twgl.UniformBlockInfoOptions} [options] Optional options for using existing an existing buffer and arrayBuffer\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName, options = {}) {\n  const blockSpecs = uniformBlockSpec.blockSpecs;\n  const uniformData = uniformBlockSpec.uniformData;\n  const blockSpec = blockSpecs[blockName];\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {},\n    };\n  }\n  const offset = options.offset ?? 0;\n  const array = options.array ?? new ArrayBuffer(blockSpec.size);\n  const buffer = options.buffer ?? gl.createBuffer();\n  const uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(UNIFORM_BUFFER, buffer);\n  if (!options.buffer) {\n    gl.bufferData(UNIFORM_BUFFER, array.byteLength, DYNAMIC_DRAW);\n  }\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n\n  let prefix = blockName + \".\";\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n  const uniforms = {};\n  const setters = {};\n  const setterTree = {};\n  blockSpec.uniformIndices.forEach(function(uniformNdx) {\n    const data = uniformData[uniformNdx];\n    let name = data.name;\n    if (name.startsWith(prefix)) {\n      name = name.substr(prefix.length);\n    }\n    const isArray = name.endsWith('[0]');\n    if (isArray) {\n      name = name.substr(0, name.length - 3);\n    }\n    const typeInfo = typeMap[data.type];\n    const Type = typeInfo.Type;\n    const byteLength = isArray\n        ? pad(typeInfo.size, 16) * data.size\n        : typeInfo.size * data.size;\n    const uniformView = new Type(array, offset + data.offset, byteLength / Type.BYTES_PER_ELEMENT);\n    uniforms[name] = uniformView;\n    // Note: I'm not sure what to do here. The original\n    // idea was to create TypedArray views into each part\n    // of the block. This is useful, for example if you have\n    // a block with { mat4: model; mat4 view; mat4 projection; }\n    // you'll get a Float32Array for each one suitable for\n    // passing to most JS math libraries including twgl's and glMatrix.js.\n    //\n    // But, if you have a an array of structures, especially if that\n    // array is large, you get a whole bunch of TypedArray views.\n    // Every one of them has overhead and switching between them all\n    // is probably a cache miss. In that case it would really be better\n    // to just have one view (asFloat) and have all the setters\n    // just reference the correct portion. But, then you can't easily\n    // treat a matrix, or a vec4, as a standalone thing like you can\n    // with all the views.\n    //\n    // Another problem with the views is they are not shared. With\n    // uniforms you have one set of setters. With UniformBlockInfo\n    // you have a set of setters *pre block instance*. That's because\n    // TypedArray views can't be mapped to different buffers.\n    //\n    // My gut right now is if you really want the speed and compactness\n    // then you should probably roll your own solution. TWGL's goal\n    // here is ease of use as AFAICT there is no simple generic efficient\n    // solution.\n    const setter = createUniformBlockUniformSetter(uniformView, isArray, typeInfo.rows, typeInfo.cols);\n    setters[name] = setter;\n    addSetterToUniformTree(name, setter, setterTree, setters);\n  });\n  return {\n    name: blockName,\n    array,\n    asFloat: new Float32Array(array),  // for debugging\n    asUint8: new Uint8Array(array),  // needed for gl.bufferSubData because it doesn't take an array buffer\n    buffer,\n    uniforms,\n    setters,\n    offset: options.bufferOffset ?? offset,\n    size: blockSpec.size,\n  };\n}\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @param {module:twgl.UniformBlockInfoOptions} [options] Optional options for using existing an existing buffer and arrayBuffer\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfo(gl, programInfo, blockName, options = {}) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName, options);\n}\n\n/**\n * Binds a uniform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the values into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  const uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  const blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n  if (blockSpec) {\n    const bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.size ?? uniformBlockInfo.array.byteLength);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferSubData(UNIFORM_BUFFER, 0, uniformBlockInfo.asUint8, uniformBlockInfo.offset || 0, uniformBlockInfo.size || 0);\n  }\n}\n\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  You can also fill out structure and array values either via\n *  shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *       float nearFar[2];\n *     };\n *     uniform Lights {\n *       Light lights[2];\n *     };\n *\n *     // in JavaScript\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.1, 10] },\n *         { intensity: 2.0, color: [0, 0, 1, 1], nearFar[0.2, 15] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[0].nearFar\": [0.1, 10],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *       \"lights[1].nearFar\": [0.2, 15],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       'lights[1]': { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.2, 15] },\n *     });\n *\n *   But you can not specify leaf array indices.\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       'lights[1].nearFar[1]': 15,     // BAD! nearFar is a leaf\n *       'lights[1].nearFar': [0.2, 15], // GOOD\n *     });\n *\n *  **IMPORTANT!**, packing in a UniformBlock is unintuitive.\n *  For example the actual layout of `someVec3Array` above in memory\n *  is `1, 2, 3, unused, 4, 5, 6, unused`. twgl takes in 6 values\n *  as shown about and copies them, skipping the padding. This might\n *  be confusing if you're already familiar with Uniform blocks.\n *\n *  If you want to deal with the padding yourself you can access the array\n *  buffer views directly. eg:\n *\n *      someBlockInfo.someVec3Array.set([1, 2, 3, 0, 4, 5, 6, 0]);\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  const setters = uniformBlockInfo.setters;\n  for (const name in values) {\n    const setter = setters[name];\n    if (setter) {\n      const value = values[name];\n      setter(value);\n    }\n  }\n}\n\nfunction setUniformTree(tree, values) {\n  for (const name in values) {\n    const prop = tree[name];\n    if (typeof prop === 'function') {\n      prop(values[name]);\n    } else {\n      setUniformTree(tree[name], values[name]);\n    }\n  }\n}\n\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     let texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n *   You can also fill out structure and array values either via\n *   shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *       float nearFar[2];\n *     };\n *     uniform Light lights[2];\n *\n *     // in JavaScript\n *\n *     twgl.setUniforms(programInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.1, 10] },\n *         { intensity: 2.0, color: [0, 0, 1, 1], nearFar[0.2, 15] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setUniforms(programInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[0].nearFar\": [0.1, 10],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *       \"lights[1].nearFar\": [0.2, 15],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1]': { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.2, 15] },\n *     });\n *\n *   But you can not specify leaf array indices\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1].nearFar[1]': 15,     // BAD! nearFar is a leaf\n *       'lights[1].nearFar': [0.2, 15], // GOOD\n *     });\n *\n * @memberOf module:twgl/programs\n */\nfunction setUniforms(setters, ...args) {  // eslint-disable-line\n  const actualSetters = setters.uniformSetters || setters;\n  const numArgs = args.length;\n  for (let aNdx = 0; aNdx < numArgs; ++aNdx) {\n    const values = args[aNdx];\n    if (Array.isArray(values)) {\n      const numValues = values.length;\n      for (let ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, values[ii]);\n      }\n    } else {\n      for (const name in values) {\n        const setter = actualSetters[name];\n        if (setter) {\n          setter(values[name]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Alias for `setUniforms`\n * @function\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n * @memberOf module:twgl/programs\n */\nconst setUniformsAndBindTextures = setUniforms;\n\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\nfunction createAttributeSetters(gl, program) {\n  const attribSetters = {\n  };\n\n  const numAttribs = gl.getProgramParameter(program, ACTIVE_ATTRIBUTES);\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    const attribInfo = gl.getActiveAttrib(program, ii);\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n    const index = gl.getAttribLocation(program, attribInfo.name);\n    const typeInfo = attrTypeMap[attribInfo.type];\n    const setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n * @private\n */\nfunction setAttributes(setters, buffers) {\n  for (const name in buffers) {\n    const setter = setters[name];\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivalent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgramInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n    if (buffers.indices) {\n      gl.bindBuffer(ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, WebGLUniformLocation>} uniformLocations The uniform locations of each uniform\n * @property {Object<string, number>} attribLocations The locations of each attribute\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @property {module:twgl.UniformBlockSpec} [uniformBlockSpec] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfoFromProgram(gl, program) {\n  const uniformSetters = createUniformSetters(gl, program);\n  const attribSetters = createAttributeSetters(gl, program);\n  const programInfo = {\n    program,\n    uniformSetters,\n    attribSetters,\n    uniformLocations: Object.fromEntries(Object.entries(uniformSetters).map(([k, v]) => [k, v.location])),\n    attribLocations: Object.fromEntries(Object.entries(attribSetters).map(([k, v]) => [k, v.location])),\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n\nconst notIdRE = /\\s|{|}|;/;\n\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfo(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const errors = [];\n  shaderSources = shaderSources.map(function(source) {\n    // Lets assume if there is no \\n it's an id\n    if (!notIdRE.test(source)) {\n      const script = getElementById(source);\n      if (!script) {\n        const err = `no element with id: ${source}`;\n        progOptions.errorCallback(err);\n        errors.push(err);\n      } else {\n        source = script.text;\n      }\n    }\n    return source;\n  });\n\n  if (errors.length) {\n    return reportError(progOptions, '');\n  }\n\n  const origCallback = progOptions.callback;\n  if (origCallback) {\n    progOptions.callback = (err, program) => {\n      origCallback(err, err ? undefined : createProgramInfoFromProgram(gl, program));\n    };\n  }\n\n  const program = createProgramFromSources(gl, shaderSources, progOptions);\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\nfunction checkAllPrograms(gl, programs, programSpecs, noDeleteShadersSet, programOptions) {\n  // check errors for everything.\n  for (const [name, program] of Object.entries(programs)) {\n    const options = {...programOptions};\n    const spec = programSpecs[name];\n    if (!Array.isArray(spec)) {\n      Object.assign(options, spec);\n    }\n    const errors = getProgramErrors(gl, program, options.errorCallback);\n    if (errors) {\n      // delete everything we created\n      for (const program of Object.values(programs)) {\n        const shaders = gl.getAttachedShaders(program);\n        gl.deleteProgram(program);\n        for (const shader of shaders) {\n          // Don't delete it if we didn't create it.\n          if (!noDeleteShadersSet.has(shader)) {\n            gl.deleteShader(shader);\n          }\n        }\n      }\n      return errors;\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates multiple programs\n *\n * Note: the reason this function exists is because the fastest way to create multiple\n * programs in WebGL is to create and compile all shaders and link all programs and only\n * afterwards check if they succeeded. In that way, giving all your shaders\n *\n * @see {@link module:twgl.createProgram}\n *\n * Example:\n *\n *     const programs = twgl.createPrograms(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Object.<string, WebGLProgram>?} the created programInfos by name\n */\nfunction createPrograms(gl, programSpecs, programOptions = {}) {\n  // Remember existing shaders so that if there is an error we don't delete them\n  const noDeleteShadersSet = new Set();\n\n  // compile and link everything\n  const programs = Object.fromEntries(Object.entries(programSpecs).map(([name, spec]) => {\n    const options = {...programOptions};\n    const shaders = Array.isArray(spec) ? spec : spec.shaders;\n    if (!Array.isArray(spec)) {\n      Object.assign(options, spec);\n    }\n    shaders.forEach(noDeleteShadersSet.add, noDeleteShadersSet);\n    return [name, createProgramNoCheck(gl, shaders, options)];\n  }));\n\n  if (programOptions.callback) {\n    waitForAllProgramsLinkCompletionAsync(gl, programs).then(() => {\n      const errors = checkAllPrograms(gl, programs, programSpecs, noDeleteShadersSet, programOptions);\n      programOptions.callback(errors, errors ? undefined : programs);\n    });\n    return undefined;\n  }\n\n  const errors = checkAllPrograms(gl, programs, programSpecs, noDeleteShadersSet, programOptions);\n  return errors ? undefined : programs;\n}\n\n/**\n * Creates multiple programInfos\n *\n * Note: the reason this function exists is because the fastest way to create multiple\n * programs in WebGL is to create and compile all shaders and link all programs and only\n * afterwards check if they succeeded. In that way, giving all your shaders\n *\n * @see {@link module:twgl.createProgramInfo}\n *\n * Examples:\n *\n *     const programInfos = twgl.createProgramInfos(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * or\n *\n *     const {lambert, phong, particles} = twgl.createProgramInfos(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Object.<string, module:twgl.ProgramInfo>?} the created programInfos by name\n */\nfunction createProgramInfos(gl, programSpecs, programOptions) {\n  programOptions = getProgramOptions(programOptions);\n\n  function createProgramInfosForPrograms(gl, programs) {\n    return Object.fromEntries(Object.entries(programs).map(([name, program]) =>\n      [name, createProgramInfoFromProgram(gl, program)]\n    ));\n  }\n\n  const origCallback = programOptions.callback;\n  if (origCallback) {\n    programOptions.callback = (err, programs) => {\n      origCallback(err, err ? undefined : createProgramInfosForPrograms(gl, programs));\n    };\n  }\n\n  const programs = createPrograms(gl, programSpecs, programOptions);\n  if (origCallback || !programs) {\n    return undefined;\n  }\n\n  return createProgramInfosForPrograms(gl, programs);\n}\n\n/**\n * Creates multiple programs asynchronously\n *\n * @see {@link module:twgl.createProgramAsync}\n *\n * Example:\n *\n *     const programs = await twgl.createProgramsAsync(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * @function\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Object.<string, WebGLProgram>?} the created programInfos by name\n */\nconst createProgramsAsync = wrapCallbackFnToAsyncFn(createPrograms);\n\n/**\n * Creates multiple programInfos asynchronously\n *\n * @see {@link module:twgl.createProgramInfoAsync}\n *\n * Example:\n *\n *     const programInfos = await twgl.createProgramInfosAsync(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * @function\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Promise<Object.<string, module:twgl.ProgramInfo>>} the created programInfos by name\n */\nconst createProgramInfosAsync = wrapCallbackFnToAsyncFn(createProgramInfos);\n\nexport {\n  createAttributeSetters,\n\n  createProgram,\n  createProgramAsync,\n  createPrograms,\n  createProgramsAsync,\n  createProgramFromScripts,\n  createProgramFromSources,\n  createProgramInfo,\n  createProgramInfoAsync,\n  createProgramInfos,\n  createProgramInfosAsync,\n  createProgramInfoFromProgram,\n  createUniformSetters,\n  createUniformBlockSpecFromProgram,\n  createUniformBlockInfoFromProgram,\n  createUniformBlockInfo,\n\n  createTransformFeedback,\n  createTransformFeedbackInfo,\n  bindTransformFeedbackInfo,\n\n  setAttributes,\n  setBuffersAndAttributes,\n  setUniforms,\n  setUniformsAndBindTextures,\n  setUniformBlock,\n  setBlockUniforms,\n  bindUniformBlock,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as utils from './utils.js';\nimport * as typedArrays from './typedarrays.js';\nimport * as helper from './helper.js';\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\nconst defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined,\n};\nconst isArrayBuffer = typedArrays.isArrayBuffer;\n\n// Should we make this on demand?\nconst getShared2DContext = function() {\n  let s_ctx;\n  return function getShared2DContext() {\n    s_ctx = s_ctx ||\n        ((typeof document !== 'undefined' && document.createElement)\n          ? document.createElement(\"canvas\").getContext(\"2d\")\n          : null);\n    return s_ctx;\n  };\n}();\n\n// NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an ImageBitmap to be cut. Unfortunately cutting an ImageBitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\nconst ALPHA                          = 0x1906;\nconst RGB                            = 0x1907;\nconst RGBA                           = 0x1908;\nconst LUMINANCE                      = 0x1909;\nconst LUMINANCE_ALPHA                = 0x190A;\nconst DEPTH_COMPONENT                = 0x1902;\nconst DEPTH_STENCIL                  = 0x84F9;\n\n/* TextureWrapMode */\n// const REPEAT                         = 0x2901;\n// const MIRRORED_REPEAT                = 0x8370;\nconst CLAMP_TO_EDGE                  = 0x812f;\n\n/* TextureMagFilter */\nconst NEAREST                        = 0x2600;\nconst LINEAR                         = 0x2601;\n\n/* TextureMinFilter */\n// const NEAREST_MIPMAP_NEAREST         = 0x2700;\n// const LINEAR_MIPMAP_NEAREST          = 0x2701;\n// const NEAREST_MIPMAP_LINEAR          = 0x2702;\n// const LINEAR_MIPMAP_LINEAR           = 0x2703;\n\n/* Texture Target */\nconst TEXTURE_2D                     = 0x0de1;\nconst TEXTURE_CUBE_MAP               = 0x8513;\nconst TEXTURE_3D                     = 0x806f;\nconst TEXTURE_2D_ARRAY               = 0x8c1a;\n\n/* Cubemap Targets */\nconst TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\nconst TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\nconst TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\nconst TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851a;\n\n/* Texture Parameters */\nconst TEXTURE_MIN_FILTER             = 0x2801;\nconst TEXTURE_MAG_FILTER             = 0x2800;\nconst TEXTURE_WRAP_S                 = 0x2802;\nconst TEXTURE_WRAP_T                 = 0x2803;\nconst TEXTURE_WRAP_R                 = 0x8072;\nconst TEXTURE_MIN_LOD                = 0x813a;\nconst TEXTURE_MAX_LOD                = 0x813b;\nconst TEXTURE_BASE_LEVEL             = 0x813c;\nconst TEXTURE_MAX_LEVEL              = 0x813d;\nconst TEXTURE_COMPARE_MODE           = 0x884C;\nconst TEXTURE_COMPARE_FUNC           = 0x884D;\n\n/* Pixel store */\nconst UNPACK_ALIGNMENT                   = 0x0cf5;\nconst UNPACK_ROW_LENGTH                  = 0x0cf2;\nconst UNPACK_IMAGE_HEIGHT                = 0x806e;\nconst UNPACK_SKIP_PIXELS                 = 0x0cf4;\nconst UNPACK_SKIP_ROWS                   = 0x0cf3;\nconst UNPACK_SKIP_IMAGES                 = 0x806d;\nconst UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\nconst UNPACK_PREMULTIPLY_ALPHA_WEBGL     = 0x9241;\nconst UNPACK_FLIP_Y_WEBGL                = 0x9240;\n\nconst R8                           = 0x8229;\nconst R8_SNORM                     = 0x8F94;\nconst R16F                         = 0x822D;\nconst R32F                         = 0x822E;\nconst R8UI                         = 0x8232;\nconst R8I                          = 0x8231;\nconst RG16UI                       = 0x823A;\nconst RG16I                        = 0x8239;\nconst RG32UI                       = 0x823C;\nconst RG32I                        = 0x823B;\nconst RG8                          = 0x822B;\nconst RG8_SNORM                    = 0x8F95;\nconst RG16F                        = 0x822F;\nconst RG32F                        = 0x8230;\nconst RG8UI                        = 0x8238;\nconst RG8I                         = 0x8237;\nconst R16UI                        = 0x8234;\nconst R16I                         = 0x8233;\nconst R32UI                        = 0x8236;\nconst R32I                         = 0x8235;\nconst RGB8                         = 0x8051;\nconst SRGB8                        = 0x8C41;\nconst RGB565                       = 0x8D62;\nconst RGB8_SNORM                   = 0x8F96;\nconst R11F_G11F_B10F               = 0x8C3A;\nconst RGB9_E5                      = 0x8C3D;\nconst RGB16F                       = 0x881B;\nconst RGB32F                       = 0x8815;\nconst RGB8UI                       = 0x8D7D;\nconst RGB8I                        = 0x8D8F;\nconst RGB16UI                      = 0x8D77;\nconst RGB16I                       = 0x8D89;\nconst RGB32UI                      = 0x8D71;\nconst RGB32I                       = 0x8D83;\nconst RGBA8                        = 0x8058;\nconst SRGB8_ALPHA8                 = 0x8C43;\nconst RGBA8_SNORM                  = 0x8F97;\nconst RGB5_A1                      = 0x8057;\nconst RGBA4                        = 0x8056;\nconst RGB10_A2                     = 0x8059;\nconst RGBA16F                      = 0x881A;\nconst RGBA32F                      = 0x8814;\nconst RGBA8UI                      = 0x8D7C;\nconst RGBA8I                       = 0x8D8E;\nconst RGB10_A2UI                   = 0x906F;\nconst RGBA16UI                     = 0x8D76;\nconst RGBA16I                      = 0x8D88;\nconst RGBA32I                      = 0x8D82;\nconst RGBA32UI                     = 0x8D70;\n\nconst DEPTH_COMPONENT16            = 0x81A5;\nconst DEPTH_COMPONENT24            = 0x81A6;\nconst DEPTH_COMPONENT32F           = 0x8CAC;\nconst DEPTH32F_STENCIL8            = 0x8CAD;\nconst DEPTH24_STENCIL8             = 0x88F0;\n\n/* DataType */\nconst BYTE                         = 0x1400;\nconst UNSIGNED_BYTE                = 0x1401;\nconst SHORT                        = 0x1402;\nconst UNSIGNED_SHORT               = 0x1403;\nconst INT                          = 0x1404;\nconst UNSIGNED_INT                 = 0x1405;\nconst FLOAT                        = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst HALF_FLOAT_OES               = 0x8D61;  // Thanks Khronos for making this different >:(\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8            = 0x84FA;\n\nconst RG                           = 0x8227;\nconst RG_INTEGER                   = 0x8228;\nconst RED                          = 0x1903;\nconst RED_INTEGER                  = 0x8D94;\nconst RGB_INTEGER                  = 0x8D98;\nconst RGBA_INTEGER                 = 0x8D99;\n\nconst formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  const f = formatInfo;\n  f[ALPHA]           = { numColorComponents: 1, };\n  f[LUMINANCE]       = { numColorComponents: 1, };\n  f[LUMINANCE_ALPHA] = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RED]             = { numColorComponents: 1, };\n  f[RED_INTEGER]     = { numColorComponents: 1, };\n  f[RG]              = { numColorComponents: 2, };\n  f[RG_INTEGER]      = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGB_INTEGER]     = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RGBA_INTEGER]    = { numColorComponents: 4, };\n  f[DEPTH_COMPONENT] = { numColorComponents: 1, };\n  f[DEPTH_STENCIL]   = { numColorComponents: 2, };\n}\n\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to texImage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nlet s_textureInternalFormatInfo;\nfunction getTextureInternalFormatInfo(internalFormat) {\n  if (!s_textureInternalFormatInfo) {\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = {};\n    // unsized formats\n    t[ALPHA]              = { textureFormat: ALPHA,           colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\n    t[LUMINANCE]          = { textureFormat: LUMINANCE,       colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\n    t[LUMINANCE_ALPHA]    = { textureFormat: LUMINANCE_ALPHA, colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2, 4, 4, 8],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\n    t[RGB]                = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 6, 6, 12, 2],    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5], };\n    t[RGBA]               = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1], };\n    t[DEPTH_COMPONENT]    = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],              type: [UNSIGNED_INT, UNSIGNED_SHORT], };\n\n    // sized formats\n    t[R8]                 = { textureFormat: RED,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1],        type: [UNSIGNED_BYTE], };\n    t[R8_SNORM]           = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [1],        type: [BYTE], };\n    t[R16F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [4, 2],     type: [FLOAT, HALF_FLOAT], };\n    t[R32F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: false, bytesPerElement: [4],        type: [FLOAT], };\n    t[R8UI]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [UNSIGNED_BYTE], };\n    t[R8I]                = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [BYTE], };\n    t[R16UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_SHORT], };\n    t[R16I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [SHORT], };\n    t[R32UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT], };\n    t[R32I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [INT], };\n    t[RG8]                = { textureFormat: RG,              colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2],        type: [UNSIGNED_BYTE], };\n    t[RG8_SNORM]          = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [2],        type: [BYTE], };\n    t[RG16F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [8, 4],     type: [FLOAT, HALF_FLOAT], };\n    t[RG32F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: false, bytesPerElement: [8],        type: [FLOAT], };\n    t[RG8UI]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_BYTE], };\n    t[RG8I]               = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [BYTE], };\n    t[RG16UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_SHORT], };\n    t[RG16I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [SHORT], };\n    t[RG32UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_INT], };\n    t[RG32I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [INT], };\n    t[RGB8]               = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE], };\n    t[SRGB8]              = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE], };\n    t[RGB565]             = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 2],     type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5], };\n    t[RGB8_SNORM]         = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [BYTE], };\n    t[R11F_G11F_B10F]     = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV], };\n    t[RGB9_E5]            = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV], };\n    t[RGB16F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6],    type: [FLOAT, HALF_FLOAT], };\n    t[RGB32F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [FLOAT], };\n    t[RGB8UI]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [UNSIGNED_BYTE], };\n    t[RGB8I]              = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [BYTE], };\n    t[RGB16UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [UNSIGNED_SHORT], };\n    t[RGB16I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [SHORT], };\n    t[RGB32UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [UNSIGNED_INT], };\n    t[RGB32I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [INT], };\n    t[RGBA8]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE], };\n    t[SRGB8_ALPHA8]       = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE], };\n    t[RGBA8_SNORM]        = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [4],        type: [BYTE], };\n    t[RGB5_A1]            = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2, 4],  type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV], };\n    t[RGBA4]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2],     type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4], };\n    t[RGB10_A2]           = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV], };\n    t[RGBA16F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [16, 8],    type: [FLOAT, HALF_FLOAT], };\n    t[RGBA32F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: false, bytesPerElement: [16],       type: [FLOAT], };\n    t[RGBA8UI]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_BYTE], };\n    t[RGBA8I]             = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [BYTE], };\n    t[RGB10_A2UI]         = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV], };\n    t[RGBA16UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_SHORT], };\n    t[RGBA16I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [SHORT], };\n    t[RGBA32I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [INT], };\n    t[RGBA32UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [UNSIGNED_INT], };\n    // Sized Internal\n    t[DEPTH_COMPONENT16]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],     type: [UNSIGNED_SHORT, UNSIGNED_INT], };\n    t[DEPTH_COMPONENT24]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT], };\n    t[DEPTH_COMPONENT32F] = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT], };\n    t[DEPTH24_STENCIL8]   = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_24_8], };\n    t[DEPTH32F_STENCIL8]  = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT_32_UNSIGNED_INT_24_8_REV], };\n\n    Object.keys(t).forEach(function(internalFormat) {\n      const info = t[internalFormat];\n      info.bytesPerElementMap = {};\n      info.bytesPerElement.forEach(function(bytesPerElement, ndx) {\n        const type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    });\n    s_textureInternalFormatInfo = t;\n  }\n  return s_textureInternalFormatInfo[internalFormat];\n}\n\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  const bytesPerElement = info.bytesPerElementMap[type];\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n  return bytesPerElement;\n}\n\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return {\n    format: info.textureFormat,\n    type: info.type[0],\n  };\n}\n\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) === 0;\n}\n\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number} width The width parameter from texImage2D etc..\n * @param {number} height The height parameter from texImage2D etc..\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canGenerateMipmap(gl, width, height, internalFormat) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.colorRenderable && info.textureFilterable;\n}\n\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canFilter(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.textureFilterable;\n}\n\n/**\n * Gets the number of components for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\nfunction getNumComponentsForFormat(format) {\n  const info = formatInfo[format];\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n  return info.numColorComponents;\n}\n\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n  return defaultType || UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n  if (!width && !height) {\n    const size = Math.sqrt(numElements / (target === TEXTURE_CUBE_MAP ? 6 : 1));\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n  return {\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [compareFunc] TEXTURE_COMPARE_FUNC setting\n * @property {number} [compareMode] TEXTURE_COMPARE_MODE setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediately. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then each entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setPackState(gl, options) {\n  gl.pixelStorei(UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion ?? 0);\n  gl.pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha ?? 0);\n  gl.pixelStorei(UNPACK_FLIP_Y_WEBGL, options.flipY ?? 0);\n}\n\n/**\n * Set skip state to defaults\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setSkipStateToDefault(gl) {\n  gl.pixelStorei(UNPACK_ALIGNMENT, 4);\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(UNPACK_ROW_LENGTH, 0);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_PIXELS, 0);\n    gl.pixelStorei(UNPACK_SKIP_ROWS, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n  }\n}\n\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParameteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.minMag);\n  }\n  if (options.min) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.min);\n  }\n  if (options.mag) {\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.mag);\n  }\n  if (options.wrap) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrap);\n    if (target === TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrapR);\n  }\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrapS);\n  }\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrapT);\n  }\n  if (options.minLod !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_LOD, options.minLod);\n  }\n  if (options.maxLod !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LOD, options.maxLod);\n  }\n  if (options.baseLevel !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n  if (options.maxLevel !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n  if (options.compareFunc !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_COMPARE_FUNC, options.compareFunc);\n  }\n  if (options.compareMode !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_COMPARE_MODE, options.compareMode);\n  }\n}\n\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureParameters(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\nfunction createSampler(gl, options) {\n  const sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\nfunction createSamplers(gl, samplerOptions) {\n  const samplers = {};\n  Object.keys(samplerOptions).forEach(function(name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @memberOf module:twgl/textures\n */\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || RGBA;\n  const target = options.target || TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n  if (canGenerateMipmap(gl, width, height, internalFormat)) {\n    gl.generateMipmap(target);\n  } else {\n    const filtering = canFilter(internalFormat) ? LINEAR : NEAREST;\n    gl.texParameteri(target, TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || (options.auto === undefined && options.level === undefined);\n}\n\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [\n      TEXTURE_CUBE_MAP_POSITIVE_X,\n      TEXTURE_CUBE_MAP_NEGATIVE_X,\n      TEXTURE_CUBE_MAP_POSITIVE_Y,\n      TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      TEXTURE_CUBE_MAP_POSITIVE_Z,\n      TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n}\n\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundant but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\nfunction getCubeFacesWithNdx(gl, options) {\n  const faces = getCubeFaceOrder(gl, options);\n  // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n  const facesWithNdx = faces.map(function(face, ndx) {\n    return { face: face, ndx: ndx };\n  });\n  facesWithNdx.sort(function(a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  const level = options.level || 0;\n  let width = element.width;\n  let height = element.height;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // guess the parts\n    const imgWidth  = element.width;\n    const imgHeight = element.height;\n    let size;\n    let slices;\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n    const ctx = getShared2DContext();\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      });\n      // Free up the canvas memory\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be un-renderable.\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none',\n        })\n        .then(function(imageBitmap) {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n          }\n        });\n      });\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    const smallest = Math.min(element.width, element.height);\n    const largest = Math.max(element.width, element.height);\n    const depth = largest / smallest;\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n    const xMult = element.width  === largest ? 1 : 0;\n    const yMult = element.height === largest ? 1 : 0;\n    gl.pixelStorei(UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n    for (let d = 0; d < depth; ++d) {\n      const srcX = d * smallest * xMult;\n      const srcY = d * smallest * yMult;\n      gl.pixelStorei(UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n    setSkipStateToDefault(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {\n}\n\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    const a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname &&\n           a.port     === location.port &&\n           a.protocol === location.protocol;\n  } else {\n    const localOrigin = (new URL(location.href)).origin;\n    const urlOrigin = (new URL(url, location.href)).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url)\n     ? 'anonymous'\n     : crossOrigin;\n}\n\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  let img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    const clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError);  // eslint-disable-line\n      img.removeEventListener('load', onLoad);  // eslint-disable-line\n      img = null;\n    };\n\n    const onError = function onError() {\n      const msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    const onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    let err;\n    let bm;\n    const cb = function cb() {\n      callback(err, bm);\n    };\n\n    const options = {};\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n    fetch(url, options).then(function(response) {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.blob();\n    }).then(function(blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none',\n      });\n    }).then(function(bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function(e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n  return img;\n}\n\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\nfunction isTexImageSource(obj) {\n  return (typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap) ||\n         (typeof ImageData !== 'undefined'  && obj instanceof ImageData) ||\n         (typeof HTMLElement !== 'undefined'  && obj instanceof HTMLElement);\n}\n\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function() {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  if (options.color === false) {\n    return;\n  }\n  // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n  const color = make1Pixel(options.color);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE, color);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, RGBA, 1, 1, 1, 0, RGBA, UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE, color);\n  }\n}\n\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} source image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as appropriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  const img = loadAndUseImage(options.src, options.crossOrigin, function(err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE;\n  const target = options.target || TEXTURE_2D;\n  if (target !== TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = 6;\n  const errors = [];\n  const faces = getCubeFaceOrder(gl, options);\n  let imgs;  // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n\n          // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function(otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE;\n  const target = options.target || TEXTURE_2D_ARRAY;\n  if (target !== TEXTURE_3D && target !== TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = urls.length;\n  const errors = [];\n  let imgs;  // eslint-disable-line\n  const level = options.level || 0;\n  let width = options.width;\n  let height = options.height;\n  const depth = urls.length;\n  let firstImage = true;\n\n  function uploadImg(slice) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        setPackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n\n          // put it in every slice otherwise some slices will be 0,0,0,0\n          for (let s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          let src = img;\n          let ctx;\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            ctx = getShared2DContext();\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src);\n\n          // free the canvas memory\n          if (ctx && src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  let width = options.width;\n  let height = options.height;\n  let depth = options.depth;\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  if (!isArrayBuffer(src)) {\n    const Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  const bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  const numElements = src.byteLength / bytesPerElement;  // TODO: check UNPACK_ALIGNMENT?\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n  let dimensions;\n  if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    if (!width && !height && !depth) {\n      const size = Math.cbrt(numElements);\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n  setSkipStateToDefault(gl);\n  gl.pixelStorei(UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    const elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    const faceSize = numElements / 6 * elementsPerElement;\n\n    getCubeFacesWithNdx(gl, options).forEach(f => {\n      const offset = faceSize * f.ndx;\n      const data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type,\n  };\n}\n\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setEmptyTexture(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n}\n\n/**\n * Creates a texture based on the options passed in.\n *\n * Note: may reset UNPACK_ALIGNMENT, UNPACK_ROW_LENGTH, UNPACK_IMAGE_HEIGHT, UNPACK_SKIP_IMAGES\n * UNPACK_SKIP_PIXELS, and UNPACK_SKIP_ROWS\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  const tex = gl.createTexture();\n  const target = options.target || TEXTURE_2D;\n  let width  = options.width  || 1;\n  let height = options.height || 1;\n  const internalFormat = options.internalFormat || RGBA;\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // this should have been the default for cubemaps :(\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n  let src = options.src;\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n    if (typeof (src) === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) ||\n               (Array.isArray(src) && (\n                    typeof src[0] === 'number' ||\n                    Array.isArray(src[0]) ||\n                    isArrayBuffer(src[0]))\n               )\n              ) {\n      const dimensions = setTextureFromArray(gl, tex, src, options);\n      width  = dimensions.width;\n      height = dimensions.height;\n    } else if (Array.isArray(src) && (typeof (src[0]) === 'string' || isTexImageSource(src[0]))) {\n      if (target === TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else { // if (isTexImageSource(src))\n      setTextureFromElement(gl, tex, src, options);\n      width  = src.width;\n      height = src.height;\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @param {number} [depth] the new depth. If not passed in will use `options.depth`\n * @memberOf module:twgl/textures\n */\nfunction resizeTexture(gl, tex, options, width, height, depth) {\n  width = width || options.width;\n  height = height || options.height;\n  depth = depth || options.depth;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  let type;\n  const src = options.src;\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || (Array.isArray(src) && typeof (src[0]) === 'number')) {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' ||\n         (Array.isArray(src) && typeof src[0] === 'string');\n}\n\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  let numDownloading = 0;\n  const errors = [];\n  const textures = {};\n  const images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function() {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function(name) {\n    const options = textureOptions[name];\n    let onLoadFn;\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n        if (err) {\n          errors.push(err);\n        }\n        callCallbackIfReady();\n      };\n      ++numDownloading;\n    }\n    textures[name] = createTexture(gl, options, onLoadFn);\n  });\n\n  // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n  callCallbackIfReady();\n\n  return textures;\n}\n\nexport {\n  setDefaults as setTextureDefaults_,\n\n  createSampler,\n  createSamplers,\n  setSamplerParameters,\n\n  createTexture,\n  setEmptyTexture,\n  setTextureFromArray,\n  loadTextureFromUrl,\n  setTextureFromElement,\n  setTextureFilteringForSize,\n  setTextureParameters,\n  setDefaultTextureColor,\n  createTextures,\n  resizeTexture,\n\n  canGenerateMipmap,\n  canFilter,\n  getNumComponentsForFormat,\n  getBytesPerElementForInternalFormat,\n  getFormatAndTypeForInternalFormat,\n};\n\n","import * as m4 from './m4.js';\nimport * as v3 from './v3.js';\nimport * as primitives from './primitives.js';\n\nexport * from './twgl.js';\nexport {\n  m4,\n  v3,\n  primitives,\n};\n\n\n\n\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as attributes from './attributes.js';\nimport * as textures from './textures.js';\nimport * as helper from './helper.js';\nimport * as utils from './utils.js';\n\nimport * as draw from './draw.js';\nimport * as framebuffers from './framebuffers.js';\nimport * as programs from './programs.js';\nimport * as typedarrays from './typedarrays.js';\nimport * as vertexArrays from './vertex-arrays.js';\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\nconst defaults = {\n  addExtensionsToContext: true,\n};\n\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n *   In other words I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults);  // eslint-disable-line\n  textures.setTextureDefaults_(newDefaults);  // eslint-disable-line\n}\n\nconst prefixRE = /^(.*?)_/;\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  const ext = gl.getExtension(extensionName);\n  if (ext) {\n    const enums = {};\n    const fnSuffix = prefixRE.exec(extensionName)[1];\n    const enumSuffix = '_' + fnSuffix;\n    for (const key in ext) {\n      const value = ext[key];\n      const isFunc = typeof (value) === 'function';\n      const suffix = isFunc ? fnSuffix : enumSuffix;\n      let name = key;\n      // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function(origFn) {\n            return function() {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    }\n    // pass the modified enums to glEnumToString\n    enums.constructor = {\n      name: ext.constructor.name,\n    };\n    utils.glEnumToString(enums, 0);\n  }\n  return ext;\n}\n\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\nconst supportedExtensions = [\n  'ANGLE_instanced_arrays',\n  'EXT_blend_minmax',\n  'EXT_color_buffer_float',\n  'EXT_color_buffer_half_float',\n  'EXT_disjoint_timer_query',\n  'EXT_disjoint_timer_query_webgl2',\n  'EXT_frag_depth',\n  'EXT_sRGB',\n  'EXT_shader_texture_lod',\n  'EXT_texture_filter_anisotropic',\n  'OES_element_index_uint',\n  'OES_standard_derivatives',\n  'OES_texture_float',\n  'OES_texture_float_linear',\n  'OES_texture_half_float',\n  'OES_texture_half_float_linear',\n  'OES_vertex_array_object',\n  'WEBGL_color_buffer_float',\n  'WEBGL_compressed_texture_atc',\n  'WEBGL_compressed_texture_etc1',\n  'WEBGL_compressed_texture_pvrtc',\n  'WEBGL_compressed_texture_s3tc',\n  'WEBGL_compressed_texture_s3tc_srgb',\n  'WEBGL_depth_texture',\n  'WEBGL_draw_buffers',\n];\n\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existence of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\nfunction addExtensionsToContext(gl) {\n  for (let ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\nfunction create3DContext(canvas, opt_attribs) {\n  const names = [\"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n * @deprecated\n * @private\n */\nfunction getWebGLContext(canvas, opt_attribs) {\n  const gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\nfunction createContext(canvas, opt_attribs) {\n  const names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getContext(canvas, opt_attribs) {\n  const gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  const width  = canvas.clientWidth  * multiplier | 0;\n  const height = canvas.clientHeight * multiplier | 0;\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}\n\nexport {\n  addExtensionsToContext,\n  getContext,\n  getWebGLContext,\n  resizeCanvasToDisplaySize,\n  setDefaults,\n\n  attributes,\n  draw,\n  framebuffers,\n  programs,\n  textures,\n  typedarrays,\n  utils,\n  vertexArrays,\n};\n\n// function notPrivate(name) {\n//   return name[name.length - 1] !== '_';\n// }\n//\n// function copyPublicProperties(src, dst) {\n//   Object.keys(src).filter(notPrivate).forEach(function(key) {\n//     dst[key] = src[key];\n//   });\n//   return dst;\n// }\n\nexport * from './attributes.js';\nexport * from './draw.js';\nexport * from './framebuffers.js';\nexport * from './programs.js';\nexport * from './textures.js';\nexport * from './typedarrays.js';\nexport * from './utils.js';\nexport * from './vertex-arrays.js';\n\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\n\n/* DataType */\nconst BYTE                           = 0x1400;\nconst UNSIGNED_BYTE                  = 0x1401;\nconst SHORT                          = 0x1402;\nconst UNSIGNED_SHORT                 = 0x1403;\nconst INT                            = 0x1404;\nconst UNSIGNED_INT                   = 0x1405;\nconst FLOAT                          = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8            = 0x84FA;\n\nconst glTypeToTypedArray = {};\n{\n  const tt = glTypeToTypedArray;\n  tt[BYTE]                           = Int8Array;\n  tt[UNSIGNED_BYTE]                  = Uint8Array;\n  tt[SHORT]                          = Int16Array;\n  tt[UNSIGNED_SHORT]                 = Uint16Array;\n  tt[INT]                            = Int32Array;\n  tt[UNSIGNED_INT]                   = Uint32Array;\n  tt[FLOAT]                          = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5]           = Uint16Array;\n  tt[HALF_FLOAT]                     = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV]    = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV]   = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV]       = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8]              = Uint32Array;\n}\n\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArray instanceof Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArray instanceof Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArrayType === Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArrayType === Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArrayType === Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArrayType === Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArrayType === Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\nfunction getTypedArrayTypeForGLType(type) {\n  const CTOR = glTypeToTypedArray[type];\n  if (!CTOR) {\n    throw new Error('unknown gl type');\n  }\n  return CTOR;\n}\n\nconst isArrayBuffer = typeof SharedArrayBuffer !== 'undefined'\n  ? function isArrayBufferOrSharedArrayBuffer(a) {\n    return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n  }\n  : function isArrayBuffer(a) {\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\n  };\n\nexport {\n  getGLTypeForTypedArray,\n  getGLTypeForTypedArrayType,\n  getTypedArrayTypeForGLType,\n  isArrayBuffer,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\nconst glEnumToString = (function() {\n  const haveEnumsForType = {};\n  const enums = {};\n\n  function addEnums(gl) {\n    const type = gl.constructor.name;\n    if (!haveEnumsForType[type]) {\n      for (const key in gl) {\n        if (typeof gl[key] === 'number') {\n          const existing = enums[gl[key]];\n          enums[gl[key]] = existing ? `${existing} | ${key}` : key;\n        }\n      }\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || (typeof value === 'number' ? `0x${value.toString(16)}` : value);\n  };\n}());\n\nexport {\n  glEnumToString,\n  isWebGL1,\n  isWebGL2,\n};\n\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\n\nlet VecType = Float32Array;\n\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\nfunction setDefaultType(ctor) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param {number} [x] Initial x value.\n * @param {number} [y] Initial y value.\n * @param {number} [z] Initial z value.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\nfunction create(x, y, z) {\n  const dst = new VecType(3);\n  if (x) {\n    dst[0] = x;\n  }\n  if (y) {\n    dst[1] = y;\n  }\n  if (z) {\n    dst[2] = z;\n  }\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector tha tis the sum of a and b.\n * @memberOf module:twgl/v3\n */\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector that is the difference of a and b.\n * @memberOf module:twgl/v3\n */\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} the linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The max components vector.\n * @memberOf module:twgl/v3\n */\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The min components vector.\n * @memberOf module:twgl/v3\n */\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n\n  return dst;\n}\n\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n\n  return dst;\n}\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of a cross b.\n * @memberOf module:twgl/v3\n */\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  const t1 = a[2] * b[0] - a[0] * b[2];\n  const t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\nfunction dot(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distance(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distanceSq(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n\n  const lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  const len = Math.sqrt(lenSq);\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n\n  return dst;\n}\n\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n\n  return dst;\n}\n\nexport {\n  add,\n  copy,\n  create,\n  cross,\n  distance,\n  distanceSq,\n  divide,\n  divScalar,\n  dot,\n  lerp,\n  lerpV,\n  length,\n  lengthSq,\n  max,\n  min,\n  mulScalar,\n  multiply,\n  negate,\n  normalize,\n  setDefaultType,\n  subtract,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as programs from './programs.js';\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\nconst ELEMENT_ARRAY_BUFFER           = 0x8893;\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n  programInfos.forEach(function(programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao,\n  };\n}\n\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n *\n * @return {WebGLVertexArrayObject|null} The created WebGLVertexArrayObject\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n  if (indices) {\n    gl.bindBuffer(ELEMENT_ARRAY_BUFFER, indices);\n  }\n  // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n  gl.bindVertexArray(null);\n  return vao;\n}\n\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n *\n * @return {WebGLVertexArrayObject|null} The created WebGLVertexArrayObject\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\nexport {\n  createVertexArrayInfo,\n  createVAOAndSetAttributes,\n  createVAOFromBufferInfo,\n};\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/twgl-full.js\");\n",""],"names":["typedArrays","_interopRequireWildcard","require","helper","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","STATIC_DRAW","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","BUFFER_SIZE","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","gl","undefined","defaults","attribPrefix","setAttributePrefix","prefix","setDefaults","newDefaults","copyExistingProperties","setBufferFromTypedArray","type","buffer","array","drawType","bindBuffer","bufferData","createBufferFromTypedArray","typedArray","isBuffer","createBuffer","isIndices","name","getNormalizationForTypedArrayType","typedArrayType","Int8Array","Uint8Array","getArray","length","data","texcoordRE","colorRE","guessNumComponentsFromName","numComponents","test","Error","concat","getNumComponents","arrayName","numValues","size","makeTypedArray","isArrayBuffer","Array","isArray","Type","typedArrayTypeFromGLTypeOrTypedArrayCtor","Uint16Array","Float32Array","glTypeFromGLTypeOrTypedArrayType","glTypeOrTypedArrayCtor","getGLTypeForTypedArrayType","getTypedArrayTypeForGLType","attribBufferFromBuffer","arrayType","attribBufferFromSize","numBytes","BYTES_PER_ELEMENT","attribBufferFromArrayLike","constructor","getGLTypeForTypedArray","createAttribsFromArrays","arrays","attribs","keys","forEach","attribName","attrib","value","fn","WebGLBuffer","_fn","normalization","normalize","stride","offset","divisor","setAttribInfoBufferFromArray","attribInfo","bufferSubData","getBytesPerValueForGLType","positionKeys","getNumElementsFromNonIndexedArrays","key","ii","numElements","getNumElementsFromAttributes","getBufferParameter","bytesPerValue","totalElements","createBufferInfoFromArrays","srcBufferInfo","newAttribs","bufferInfo","assign","indices","newIndices","elementType","createBufferFromArray","createBuffersFromArrays","buffers","programs","TRIANGLES","drawBufferInfo","count","instanceCount","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","object","active","programInfo","vertexArrayInfo","bindBuffers","useProgram","program","vertexArrayObject","bindVertexArray","setBuffersAndAttributes","setUniforms","uniforms","textures","FRAMEBUFFER","RENDERBUFFER","TEXTURE_2D","DEPTH_COMPONENT","RGBA","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","RGBA4","RGB5_A1","RGB565","DEPTH_COMPONENT16","STENCIL_INDEX","STENCIL_INDEX8","DEPTH_STENCIL","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","CLAMP_TO_EDGE","LINEAR","defaultAttachments","format","min","wrap","attachmentsByFormat","getAttachmentPointForFormat","internalFormat","renderbufferFormats","isRenderbufferFormat","MAX_COLOR_ATTACHMENT_POINTS","isColorAttachmentPoint","attachmentPoint","createFramebufferInfo","attachments","width","height","target","fb","createFramebuffer","bindFramebuffer","drawingBufferWidth","drawingBufferHeight","usedColorAttachmentsPoints","framebufferInfo","framebuffer","attachmentOptions","attachment","samples","push","createRenderbuffer","bindRenderbuffer","renderbufferStorageMultisample","renderbufferStorage","textureOptions","auto","minMag","mag","wrapS","wrapT","createTexture","isRenderbuffer","framebufferRenderbuffer","isTexture","layer","framebufferTextureLayer","level","framebufferTexture2D","drawBuffers","resizeFramebufferInfo","ndx","resizeTexture","bindFramebufferInfo","viewport","copyNamedProperties","names","src","dst","error","_console","console","apply","arguments","warn","_console2","isTypeWeakMaps","Map","isType","weakMap","isOfType","s","toString","substring","WebGLRenderbuffer","isShader","WebGLShader","WebGLTexture","isSampler","WebGLSampler","v3","MatType","setDefaultType","ctor","oldType","negate","m","create","fill","copy","identity","transpose","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t1","t2","t3","d","multiply","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","setTranslation","v","getTranslation","getAxis","axis","off","setAxis","perspective","fieldOfViewYInRadians","aspect","zNear","zFar","f","Math","tan","PI","rangeInv","ortho","left","right","bottom","top","near","far","frustum","dx","dy","dz","xAxis","yAxis","zAxis","lookAt","eye","up","subtract","cross","translation","translate","v0","v1","v2","rotationX","angleInRadians","c","cos","sin","rotateX","rotationY","rotateY","rotationZ","rotateZ","axisRotation","x","y","z","sqrt","xx","yy","zz","oneMinusCosine","axisRotate","r00","r01","r02","r10","r11","r12","r20","r21","r22","scaling","scale","transformPoint","transformDirection","transformNormal","mi","attributes","m4","getArray_","getNumComponents_","augmentTypedArray","cursor","jj","reset","opt_index","createAugmentedTypedArray","opt_type","allButIndices","deindexVertices","vertices","newVertices","expandToUnindexed","channel","srcBuffer","dstBuffer","filter","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","applyFuncToV3Array","matrix","len","tmp","reorientDirections","reorientNormals","reorientPositions","reorientVertices","indexOf","createXYQuadVertices","xOffset","yOffset","position","texcoord","createPlaneVertices","depth","subdivisionsWidth","subdivisionsDepth","numVertices","positions","texcoords","numVertsAcross","createSphereVertices","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","cosPhi","ux","uy","uz","numVertsAround","CUBE_FACE_INDICES","createCubeVertices","k","cornerVertices","faceNormals","uvCoords","faceIndices","uv","createTruncatedConeVertices","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","start","end","ringRadius","expandRLEData","rleData","padding","runLength","element","slice","create3DFVertices","colors","numVerts","color","createCrescentVertices","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","lerp","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","angle","px","py","pz","add","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","createCylinderVertices","createTorusVertices","bodySubdivisions","startAngle","endAngle","range","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","nextRingIndex","nextSliceIndex","createDiscVertices","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","pow","randInt","random","makeRandomVertexColors","options","vColors","rand","numVertsPerColor","vertsPerColor","numSets","createBufferFunc","createBufferInfoFunc","arraySpecPropertyNames","copyElements","dstNdx","createArrayOfSameType","srcArray","arraySrc","newArray","newArraySpec","concatVertices","arrayOfArrays","baseName","_loop","arrayInfo","getLengthOfCombinedArrays","arraySpec","spec","copyArraysToNewArray","base","baseIndex","newArrays","info","duplicateVertices","create3DFBufferInfo","exports","create3DFBuffers","createCubeBufferInfo","createCubeBuffers","createPlaneBufferInfo","createPlaneBuffers","createSphereBufferInfo","createSphereBuffers","createTruncatedConeBufferInfo","createTruncatedConeBuffers","createXYQuadBufferInfo","createXYQuadBuffers","createCrescentBufferInfo","createCrescentBuffers","createCylinderBufferInfo","createCylinderBuffers","createTorusBufferInfo","createTorusBuffers","createDiscBufferInfo","createDiscBuffers","createCresentBufferInfo","createCresentBuffers","createCresentVertices","utils","_regeneratorRuntime","o","Symbol","iterator","asyncIterator","toStringTag","define","enumerable","configurable","writable","Generator","Context","makeInvokeMethod","tryCatch","arg","h","l","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","ownKeys","getOwnPropertySymbols","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","_toPropertyKey","_toPrimitive","String","toPrimitive","Number","asyncGeneratorStep","gen","reject","_next","_throw","_asyncToGenerator","self","args","err","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_createForOfIteratorHelper","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","from","iter","arr2","getElementById","id","document","TEXTURE0","DYNAMIC_DRAW","UNIFORM_BUFFER","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK","COMPILE_STATUS","LINK_STATUS","FRAGMENT_SHADER","VERTEX_SHADER","SEPARATE_ATTRIBS","ACTIVE_UNIFORMS","ACTIVE_ATTRIBUTES","TRANSFORM_FEEDBACK_VARYINGS","ACTIVE_UNIFORM_BLOCKS","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","typeMap","getBindPointForSamplerType","bindPoint","floatSetter","location","uniform1f","floatArraySetter","uniform1fv","floatVec2Setter","uniform2fv","floatVec3Setter","uniform3fv","floatVec4Setter","uniform4fv","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","uintSetter","uniform1ui","uintArraySetter","uniform1uiv","uintVec2Setter","uniform2uiv","uintVec3Setter","uniform3uiv","uintVec4Setter","uniform4uiv","floatMat2Setter","uniformMatrix2fv","floatMat3Setter","uniformMatrix3fv","floatMat4Setter","uniformMatrix4fv","floatMat23Setter","uniformMatrix2x3fv","floatMat32Setter","uniformMatrix3x2fv","floatMat24Setter","uniformMatrix2x4fv","floatMat42Setter","uniformMatrix4x2fv","floatMat34Setter","uniformMatrix3x4fv","floatMat43Setter","uniformMatrix4x3fv","samplerSetter","unit","isWebGL2","textureOrPair","texture","sampler","activeTexture","bindTexture","bindSampler","samplerArraySetter","units","Int32Array","index","setter","arraySetter","cols","Uint32Array","rows","floatAttribSetter","disableVertexAttribArray","vertexAttrib4fv","vertexAttrib3fv","vertexAttrib2fv","vertexAttrib1fv","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","intAttribSetter","vertexAttrib4iv","vertexAttribIPointer","uintAttribSetter","vertexAttrib4uiv","matAttribSetter","typeInfo","defaultSize","rowOffset","attrTypeMap","errorRE","addLineNumbersWithError","log","lineOffset","matches","matchAll","lineNoToErrorMap","map","lineNo","parseInt","msg","split","line","join","spaceRE","prepShaderSource","shaderSource","replace","reportError","progOptions","errorCallback","callback","setTimeout","errors","checkShaderStatus","shaderType","shader","errFn","compiled","getShaderParameter","lastError","getShaderInfoLog","_prepShaderSource","getShaderSource","glEnumToString","getProgramOptions","opt_attribs","opt_locations","opt_errorCallback","transformFeedbackVaryings","transformFeedbackMode","opt","attribLocations","_len","_key","defaultShaderType","getShaderTypeFromScriptType","scriptType","deleteProgramAndShaders","notThese","shaders","getAttachedShaders","_iterator","_step","deleteShader","deleteProgram","wait","ms","createProgramNoCheck","programOptions","createProgram","_getProgramOptions","elem","text","createShader","compileShader","attachShader","entries","_ref","_ref2","loc","bindAttribLocation","varyings","linkProgram","shaderSet","Set","hasErrors","getProgramErrors","waitForProgramLinkCompletionAsync","wrapCallbackFnToAsyncFn","arg1","_len2","_key2","createProgramAsync","createProgramInfoAsync","createProgramInfo","_x","_x2","_waitForProgramLinkCompletionAsync","_callee","ext","checkFn","waitTime","_callee$","_context","getExtension","getProgramParameter","COMPLETION_STATUS_KHR","waitForAllProgramsLinkCompletionAsync","_x3","_x4","_waitForAllProgramsLinkCompletionAsync","_callee2","_i3","_Object$values2","_callee2$","_context2","linked","getProgramInfoLog","SHADER_TYPE","_","createProgramFromScripts","shaderScriptIds","_iterator2","_step2","scriptId","shaderScript","createProgramFromSources","shaderSources","isBuiltIn","startsWith","tokenRE","isDigit","addSetterToUniformTree","fullPath","node","uniformSetters","tokens","tokenNdx","path","token","isArrayIndex","accessor","isLastToken","child","setUniformTree","createUniformSetters","textureUnit","createUniformSetter","uniformInfo","endsWith","uniformTree","numUniforms","getActiveUniform","substr","getUniformLocation","createTransformFeedbackInfo","numVaryings","varying","getTransformFeedbackVarying","bindTransformFeedbackInfo","transformFeedbackInfo","buf","bindBufferRange","bindBufferBase","createTransformFeedback","tf","bindTransformFeedback","createUniformBlockSpecFromProgram","uniformData","uniformIndices","pair","pname","getActiveUniforms","blockSpecs","numUniformBlocks","getActiveUniformBlockName","blockSpec","getUniformBlockIndex","usedByVertexShader","getActiveUniformBlockParameter","usedByFragmentShader","used","arraySuffixRE","pad","createUniformBlockUniformSetter","view","totalRows","row","col","createUniformBlockInfoFromProgram","uniformBlockSpec","blockName","_options$offset","_options$array","_options$buffer","_options$bufferOffset","ArrayBuffer","uniformBufferIndex","byteLength","uniformBlockBinding","setters","setterTree","uniformNdx","uniformView","asFloat","asUint8","bufferOffset","createUniformBlockInfo","bindUniformBlock","uniformBlockInfo","_uniformBlockInfo$siz","bufferBindIndex","setUniformBlock","setBlockUniforms","tree","prop","actualSetters","numArgs","aNdx","setUniformsAndBindTextures","createAttributeSetters","attribSetters","numAttribs","getActiveAttrib","getAttribLocation","setAttributes","createProgramInfoFromProgram","uniformLocations","fromEntries","_ref3","_ref4","_ref5","_ref6","notIdRE","source","script","origCallback","checkAllPrograms","programSpecs","noDeleteShadersSet","_i","_Object$entries","_Object$entries$_i","_i2","_Object$values","_iterator3","_step3","createPrograms","_ref7","_ref8","createProgramInfos","createProgramInfosForPrograms","_ref9","_ref10","createProgramsAsync","createProgramInfosAsync","textureColor","crossOrigin","getShared2DContext","s_ctx","createElement","getContext","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","NEAREST","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","TEXTURE_COMPARE_MODE","TEXTURE_COMPARE_FUNC","UNPACK_ALIGNMENT","UNPACK_ROW_LENGTH","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","UNPACK_COLORSPACE_CONVERSION_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","R8","R8_SNORM","R16F","R32F","R8UI","R8I","RG16UI","RG16I","RG32UI","RG32I","RG8","RG8_SNORM","RG16F","RG32F","RG8UI","RG8I","R16UI","R16I","R32UI","R32I","RGB8","SRGB8","RGB8_SNORM","R11F_G11F_B10F","RGB9_E5","RGB16F","RGB32F","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGBA8","SRGB8_ALPHA8","RGBA8_SNORM","RGB10_A2","RGBA16F","RGBA32F","RGBA8UI","RGBA8I","RGB10_A2UI","RGBA16UI","RGBA16I","RGBA32I","RGBA32UI","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","HALF_FLOAT_OES","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","RG","RG_INTEGER","RED","RED_INTEGER","RGB_INTEGER","RGBA_INTEGER","formatInfo","numColorComponents","s_textureInternalFormatInfo","getTextureInternalFormatInfo","textureFormat","colorRenderable","textureFilterable","bytesPerElement","bytesPerElementMap","getBytesPerElementForInternalFormat","getFormatAndTypeForInternalFormat","isPowerOf2","canGenerateMipmap","canFilter","getNumComponentsForFormat","getTextureTypeForArrayType","defaultType","guessDimensions","setDefaultTextureColor","setPackState","_options$colorspaceCo","_options$premultiplyA","_options$flipY","pixelStorei","colorspaceConversion","premultiplyAlpha","flipY","setSkipStateToDefault","setTextureSamplerParameters","parameteriFn","wrapR","minLod","maxLod","baseLevel","maxLevel","compareFunc","compareMode","setTextureParameters","tex","texParameteri","setSamplerParameters","samplerParameteri","createSampler","createSamplers","samplerOptions","samplers","make1Pixel","setTextureFilteringForSize","generateMipmap","filtering","shouldAutomaticallySetTextureFilteringForSize","getCubeFaceOrder","cubeFaceOrder","getCubeFacesWithNdx","faces","facesWithNdx","face","sort","setTextureFromElement","formatType","imgWidth","imgHeight","slices","nodeName","ctx","canvas","drawImage","texImage2D","createImageBitmap","colorSpaceConversion","imageBitmap","smallest","largest","max","xMult","yMult","texImage3D","srcX","srcY","texSubImage3D","noop","urlIsSameOrigin","url","href","hostname","port","protocol","localOrigin","URL","origin","urlOrigin","setToAnonymousIfUndefinedAndURLIsNotSameOrigin","loadImage","img","Image","clearEventHandlers","removeEventListener","onError","onLoad","addEventListener","ImageBitmap","bm","cb","mode","fetch","response","ok","blob","bitmap","isTexImageSource","ImageData","HTMLElement","loadAndUseImage","setTextureTo1PixelColor","loadTextureFromUrl","loadCubemapFromUrls","urls","numToLoad","imgs","uploadImg","faceTarget","otherTarget","loadSlicesFromUrls","firstImage","setTextureFromArray","Uint8ClampedArray","dimensions","cbrt","unpackAlignment","elementsPerElement","faceSize","subarray","setEmptyTexture","isAsyncSrc","createTextures","numDownloading","images","callCallbackIfReady","onLoadFn","primitives","_twgl","_exportNames","draw","framebuffers","typedarrays","vertexArrays","addExtensionsToContext","setAttributeDefaults_","setTextureDefaults_","prefixRE","addExtensionToContext","extensionName","enums","fnSuffix","exec","enumSuffix","isFunc","suffix","origFn","supportedExtensions","create3DContext","context","getWebGLContext","createContext","resizeCanvasToDisplaySize","multiplier","clientWidth","clientHeight","glTypeToTypedArray","tt","Int16Array","CTOR","SharedArrayBuffer","isArrayBufferOrSharedArrayBuffer","texStorage2D","isWebGL1","haveEnumsForType","addEnums","existing","VecType","lerpV","mulScalar","divScalar","dot","lengthSq","distance","distanceSq","lenSq","divide","createVertexArrayInfo","programInfos","vao","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo"],"sourceRoot":""}